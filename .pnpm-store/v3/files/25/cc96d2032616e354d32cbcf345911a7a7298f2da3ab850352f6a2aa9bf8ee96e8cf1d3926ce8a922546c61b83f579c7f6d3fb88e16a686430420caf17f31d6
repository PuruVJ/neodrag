{"version":3,"sources":["../src/preprocess.ts"],"sourcesContent":["import path from 'path';\nimport * as vite from 'vite';\nimport type { ESBuildOptions, ResolvedConfig } from 'vite';\n// eslint-disable-next-line node/no-missing-import\nimport type { Preprocessor, PreprocessorGroup } from 'svelte/types/compiler/preprocess';\n\nconst supportedStyleLangs = ['css', 'less', 'sass', 'scss', 'styl', 'stylus', 'postcss', 'sss'];\nconst supportedScriptLangs = ['ts'];\n\nexport function vitePreprocess(opts?: {\n\tscript?: boolean;\n\tstyle?: boolean | vite.InlineConfig | vite.ResolvedConfig;\n}) {\n\tconst preprocessor: PreprocessorGroup = {};\n\tif (opts?.script !== false) {\n\t\tpreprocessor.script = viteScript().script;\n\t}\n\tif (opts?.style !== false) {\n\t\tconst styleOpts = typeof opts?.style == 'object' ? opts?.style : undefined;\n\t\tpreprocessor.style = viteStyle(styleOpts).style;\n\t}\n\treturn preprocessor;\n}\n\nfunction viteScript(): { script: Preprocessor } {\n\treturn {\n\t\tasync script({ attributes, content, filename = '' }) {\n\t\t\tconst lang = attributes.lang as string;\n\t\t\tif (!supportedScriptLangs.includes(lang)) return;\n\t\t\tconst transformResult = await vite.transformWithEsbuild(content, filename, {\n\t\t\t\tloader: lang as ESBuildOptions['loader'],\n\t\t\t\ttarget: 'esnext',\n\t\t\t\ttsconfigRaw: {\n\t\t\t\t\tcompilerOptions: {\n\t\t\t\t\t\t// svelte typescript needs this flag to work with type imports\n\t\t\t\t\t\timportsNotUsedAsValues: 'preserve',\n\t\t\t\t\t\tpreserveValueImports: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn {\n\t\t\t\tcode: transformResult.code,\n\t\t\t\tmap: transformResult.map\n\t\t\t};\n\t\t}\n\t};\n}\n\nfunction viteStyle(config: vite.InlineConfig | vite.ResolvedConfig = {}): {\n\tstyle: Preprocessor;\n} {\n\tlet transform: CssTransform;\n\tconst style: Preprocessor = async ({ attributes, content, filename = '' }) => {\n\t\tconst lang = attributes.lang as string;\n\t\tif (!supportedStyleLangs.includes(lang)) return;\n\t\tif (!transform) {\n\t\t\tlet resolvedConfig: vite.ResolvedConfig;\n\t\t\t// @ts-expect-error special prop added if running in v-p-s\n\t\t\tif (style.__resolvedConfig) {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tresolvedConfig = style.__resolvedConfig;\n\t\t\t} else if (isResolvedConfig(config)) {\n\t\t\t\tresolvedConfig = config;\n\t\t\t} else {\n\t\t\t\tresolvedConfig = await vite.resolveConfig(\n\t\t\t\t\tconfig,\n\t\t\t\t\tprocess.env.NODE_ENV === 'production' ? 'build' : 'serve'\n\t\t\t\t);\n\t\t\t}\n\t\t\ttransform = getCssTransformFn(resolvedConfig);\n\t\t}\n\t\tconst moduleId = `${filename}.${lang}`;\n\t\tconst result = await transform(content, moduleId);\n\t\t// patch sourcemap source to point back to original filename\n\t\tif (result.map?.sources?.[0] === moduleId) {\n\t\t\tresult.map.sources[0] = path.basename(filename);\n\t\t}\n\t\treturn {\n\t\t\tcode: result.code,\n\t\t\tmap: result.map ?? undefined\n\t\t};\n\t};\n\t// @ts-expect-error tag so can be found by v-p-s\n\tstyle.__resolvedConfig = null;\n\treturn { style };\n}\n\n// eslint-disable-next-line no-unused-vars\ntype CssTransform = (code: string, filename: string) => Promise<{ code: string; map?: any }>;\n\nfunction getCssTransformFn(config: ResolvedConfig): CssTransform {\n\t// API is only available in Vite 3.2 and above\n\t// TODO: Remove Vite plugin hack when bump peer dep to Vite 3.2\n\tif (vite.preprocessCSS) {\n\t\treturn async (code, filename) => {\n\t\t\treturn vite.preprocessCSS(code, filename, config);\n\t\t};\n\t} else {\n\t\tconst pluginName = 'vite:css';\n\t\tconst plugin = config.plugins.find((p) => p.name === pluginName);\n\t\tif (!plugin) {\n\t\t\tthrow new Error(`failed to find plugin ${pluginName}`);\n\t\t}\n\t\tif (!plugin.transform) {\n\t\t\tthrow new Error(`plugin ${pluginName} has no transform`);\n\t\t}\n\t\t// @ts-expect-error\n\t\treturn plugin.transform.bind(null);\n\t}\n}\n\nfunction isResolvedConfig(config: any): config is vite.ResolvedConfig {\n\treturn !!config.inlineConfig;\n}\n"],"mappings":";AAAA,OAAO,UAAU;AACjB,YAAY,UAAU;AAKtB,IAAM,sBAAsB,CAAC,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,UAAU,WAAW,KAAK;AAC9F,IAAM,uBAAuB,CAAC,IAAI;AAE3B,SAAS,eAAe,MAG5B;AACF,QAAM,eAAkC,CAAC;AACzC,MAAI,MAAM,WAAW,OAAO;AAC3B,iBAAa,SAAS,WAAW,EAAE;AAAA,EACpC;AACA,MAAI,MAAM,UAAU,OAAO;AAC1B,UAAM,YAAY,OAAO,MAAM,SAAS,WAAW,MAAM,QAAQ;AACjE,iBAAa,QAAQ,UAAU,SAAS,EAAE;AAAA,EAC3C;AACA,SAAO;AACR;AAEA,SAAS,aAAuC;AAC/C,SAAO;AAAA,IACN,MAAM,OAAO,EAAE,YAAY,SAAS,WAAW,GAAG,GAAG;AACpD,YAAM,OAAO,WAAW;AACxB,UAAI,CAAC,qBAAqB,SAAS,IAAI;AAAG;AAC1C,YAAM,kBAAkB,MAAW,0BAAqB,SAAS,UAAU;AAAA,QAC1E,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,aAAa;AAAA,UACZ,iBAAiB;AAAA,YAEhB,wBAAwB;AAAA,YACxB,sBAAsB;AAAA,UACvB;AAAA,QACD;AAAA,MACD,CAAC;AACD,aAAO;AAAA,QACN,MAAM,gBAAgB;AAAA,QACtB,KAAK,gBAAgB;AAAA,MACtB;AAAA,IACD;AAAA,EACD;AACD;AAEA,SAAS,UAAU,SAAkD,CAAC,GAEpE;AACD,MAAI;AACJ,QAAM,QAAsB,OAAO,EAAE,YAAY,SAAS,WAAW,GAAG,MAAM;AAC7E,UAAM,OAAO,WAAW;AACxB,QAAI,CAAC,oBAAoB,SAAS,IAAI;AAAG;AACzC,QAAI,CAAC,WAAW;AACf,UAAI;AAEJ,UAAI,MAAM,kBAAkB;AAE3B,yBAAiB,MAAM;AAAA,MACxB,WAAW,iBAAiB,MAAM,GAAG;AACpC,yBAAiB;AAAA,MAClB,OAAO;AACN,yBAAiB,MAAW;AAAA,UAC3B;AAAA,UACA,QAAQ,IAAI,aAAa,eAAe,UAAU;AAAA,QACnD;AAAA,MACD;AACA,kBAAY,kBAAkB,cAAc;AAAA,IAC7C;AACA,UAAM,WAAW,GAAG,YAAY;AAChC,UAAM,SAAS,MAAM,UAAU,SAAS,QAAQ;AAEhD,QAAI,OAAO,KAAK,UAAU,OAAO,UAAU;AAC1C,aAAO,IAAI,QAAQ,KAAK,KAAK,SAAS,QAAQ;AAAA,IAC/C;AACA,WAAO;AAAA,MACN,MAAM,OAAO;AAAA,MACb,KAAK,OAAO,OAAO;AAAA,IACpB;AAAA,EACD;AAEA,QAAM,mBAAmB;AACzB,SAAO,EAAE,MAAM;AAChB;AAKA,SAAS,kBAAkB,QAAsC;AAGhE,MAAS,oBAAe;AACvB,WAAO,OAAO,MAAM,aAAa;AAChC,aAAY,mBAAc,MAAM,UAAU,MAAM;AAAA,IACjD;AAAA,EACD,OAAO;AACN,UAAM,aAAa;AACnB,UAAM,SAAS,OAAO,QAAQ,KAAK,CAAC,MAAM,EAAE,SAAS,UAAU;AAC/D,QAAI,CAAC,QAAQ;AACZ,YAAM,IAAI,MAAM,yBAAyB,YAAY;AAAA,IACtD;AACA,QAAI,CAAC,OAAO,WAAW;AACtB,YAAM,IAAI,MAAM,UAAU,6BAA6B;AAAA,IACxD;AAEA,WAAO,OAAO,UAAU,KAAK,IAAI;AAAA,EAClC;AACD;AAEA,SAAS,iBAAiB,QAA4C;AACrE,SAAO,CAAC,CAAC,OAAO;AACjB;","names":[]}