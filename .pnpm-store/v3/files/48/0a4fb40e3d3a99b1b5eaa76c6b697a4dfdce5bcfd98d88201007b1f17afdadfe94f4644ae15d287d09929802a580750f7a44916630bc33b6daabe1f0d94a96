{"version":3,"file":"sander.es6.js","sources":["../src/sander.js","../src/extraMethods/symlinkOrCopy.js","../src/extraMethods/rimraf.js","../src/extraMethods/lsr.js","../src/extraMethods/copyFile.js","../src/extraMethods/copydir.js","../src/specialMethods/writeFile-appendFile.js","../src/specialMethods/symlink.js","../src/specialMethods/open.js","../src/specialMethods/mkdir.js","../src/specialMethods/link-rename.js","../src/specialMethods/exists.js","../src/specialMethods/createReadStream-createWriteStream.js","../src/utils/resolvePathAndOptions.js","../src/methodMakers/fileDescriptorMethod.js","../src/methodMakers/standardMethod.js","../src/utils/resolvePath.js"],"sourcesContent":["import * as fs from 'graceful-fs';\nimport * as es6Promise from 'es6-promise';\nimport { syncMethod, asyncMethod } from './methodMakers/standardMethod';\nimport { asyncFileDescriptorMethod } from './methodMakers/fileDescriptorMethod';\n\n// standard async methods\nexport const chmod = asyncMethod( 'chmod' );\nexport const chown = asyncMethod( 'chown' );\nexport const createReadStream = asyncMethod( 'createReadStream' );\nexport const createWriteStream = asyncMethod( 'createWriteStream' );\nexport const lchmod = asyncMethod( 'lchmod' );\nexport const lchown = asyncMethod( 'lchown' );\nexport const lstat = asyncMethod( 'lstat' );\nexport const readdir = asyncMethod( 'readdir' );\nexport const readFile = asyncMethod( 'readFile' );\nexport const readlink = asyncMethod( 'readlink' );\nexport const realpath = asyncMethod( 'realpath' );\nexport const rmdir = asyncMethod( 'rmdir' );\nexport const stat = asyncMethod( 'stat' );\nexport const truncate = asyncMethod( 'truncate' );\nexport const unlink = asyncMethod( 'unlink' );\nexport const utimes = asyncMethod( 'utimes' );\nexport const unwatchFile = asyncMethod( 'unwatchFile' );\nexport const watch = asyncMethod( 'watch' );\nexport const watchFile = asyncMethod( 'watchFile' );\n\n// standard sync methods\nexport const chmodSync = syncMethod( 'chmodSync' );\nexport const chownSync = syncMethod( 'chownSync' );\nexport const lchmodSync = syncMethod( 'lchmodSync' );\nexport const lchownSync = syncMethod( 'lchownSync' );\nexport const lstatSync = syncMethod( 'lstatSync' );\nexport const readdirSync = syncMethod( 'readdirSync' );\nexport const readFileSync = syncMethod( 'readFileSync' );\nexport const readlinkSync = syncMethod( 'readlinkSync' );\nexport const realpathSync = syncMethod( 'realpathSync' );\nexport const rmdirSync = syncMethod( 'rmdirSync' );\nexport const statSync = syncMethod( 'statSync' );\nexport const truncateSync = syncMethod( 'truncateSync' );\nexport const unlinkSync = syncMethod( 'unlinkSync' );\nexport const utimesSync = syncMethod( 'utimesSync' );\n\n// file descriptor async methods\nexport const close = asyncFileDescriptorMethod( 'close' );\nexport const fchmod = asyncFileDescriptorMethod( 'fchmod' );\nexport const fchown = asyncFileDescriptorMethod( 'fchown' );\nexport const fstat = asyncFileDescriptorMethod( 'fstat' );\nexport const fsync = asyncFileDescriptorMethod( 'fsync' );\nexport const ftruncate = asyncFileDescriptorMethod( 'ftruncate' );\nexport const futimes = asyncFileDescriptorMethod( 'futimes' );\nexport const read = asyncFileDescriptorMethod( 'read' );\n\n// file descriptor sync methods\nexport const closeSync = fs.closeSync;\nexport const fchmodSync = fs.fchmodSync;\nexport const fchownSync = fs.fchownSync;\nexport const fstatSync = fs.fstatSync;\nexport const fsyncSync = fs.fsyncSync;\nexport const ftruncateSync = fs.ftruncateSync;\nexport const futimesSync = fs.futimesSync;\nexport const readSync = fs.readSync;\n\n// special methods\nexport { createReadStream, createWriteStream } from './specialMethods/createReadStream-createWriteStream'; // TODO aren't these covered by the standard methods?\nexport { exists, existsSync } from './specialMethods/exists';\nexport { link, linkSync, rename, renameSync } from './specialMethods/link-rename';\nexport { mkdir, mkdirSync } from './specialMethods/mkdir';\nexport { open, openSync } from './specialMethods/open';\nexport { symlink, symlinkSync } from './specialMethods/symlink';\nexport { writeFile, writeFileSync, appendFile, appendFileSync } from './specialMethods/writeFile-appendFile';\n\n// extra methods\nexport { copydir, copydirSync } from './extraMethods/copydir';\nexport { copyFile, copyFileSync } from './extraMethods/copyFile';\nexport { lsr, lsrSync } from './extraMethods/lsr';\nexport { rimraf, rimrafSync } from './extraMethods/rimraf';\nexport { symlinkOrCopy, symlinkOrCopySync } from './extraMethods/symlinkOrCopy';\n\n// expose Promise for convenience\n// https://github.com/esperantojs/esperanto/issues/161\nexport const Promise = es6Promise.Promise;","import { stat, statSync } from '../sander';\nimport { copydir, copydirSync } from './copydir';\nimport { copyFile, copyFileSync } from './copyFile';\nimport { symlink, symlinkSync } from '../specialMethods/symlink';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nconst isWindows = process.platform === 'win32';\n\nexport function symlinkOrCopy () {\n\tif ( isWindows ) {\n\t\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\t\tlet copyDirOrFileTo = stat( src )\n\t\t\t.then( stats => {\n\t\t\t\treturn ( stats.isDirectory() ? copydir : copyFile )\n\t\t\t\t\t.apply( null, arguments )\n\t\t\t\t\t.to;\n\t\t\t});\n\n\t\treturn {\n\t\t\tto () {\n\t\t\t\treturn copyDirOrFileTo\n\t\t\t\t\t.then(fn => {\n\t\t\t\t\t\treturn fn.apply(null, arguments);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\treturn symlink.apply( null, arguments );\n}\n\nexport function symlinkOrCopySync () {\n\tif ( isWindows ) {\n\t\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\t\treturn ( statSync( src ).isDirectory() ? copydirSync : copyFileSync ).apply( null, arguments );\n\t}\n\n\treturn symlinkSync.apply( null, arguments );\n}","import _rimraf from 'rimraf';\nimport resolvePath from '../utils/resolvePath';\n\nexport function rimraf () {\n\tconst target = resolvePath( arguments );\n\n\treturn new Promise( ( fulfil, reject ) => {\n\t\t_rimraf( target, err => {\n\t\t\tif ( err ) {\n\t\t\t\treject( err );\n\t\t\t} else {\n\t\t\t\tfulfil();\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport function rimrafSync () {\n\t_rimraf.sync( resolvePath( arguments ) );\n}","import * as fs from 'fs';\nimport { resolve, sep } from 'path';\nimport resolvePath from '../utils/resolvePath';\n\nfunction walk ( dir, callback ) {\n\tlet results = [];\n\n\tfs.readdir( dir, ( err, files ) => {\n\t\tif ( err ) return callback( err );\n\n\t\tlet pending = files.length;\n\t\tif ( !pending ) return callback( null, results );\n\n\t\tfiles.forEach( file => {\n\t\t\tfile = resolve( dir, file );\n\n\t\t\tfs.stat( file, ( err, stats ) => {\n\t\t\t\tif ( stats && stats.isDirectory() ) {\n\t\t\t\t\twalk( file, ( err, res ) => {\n\t\t\t\t\t\tresults = results.concat( res );\n\t\t\t\t\t\tif ( !--pending ) callback( null, results );\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresults.push( file );\n\t\t\t\t\tif ( !--pending ) callback( null, results );\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n};\n\nexport function lsr () {\n\tconst basedir = resolvePath( arguments );\n\n\treturn new Promise( ( fulfil, reject ) => {\n\t\twalk( basedir, function ( err, result ) {\n\t\t\tif ( err ) return reject( err );\n\n\t\t\t// files should be relative to basedir\n\t\t\tconst index = basedir.length + 1;\n\t\t\tlet i = result.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tresult[i] = result[i].substring( index );\n\t\t\t}\n\n\t\t\tfulfil( result );\n\t\t});\n\t});\n}\n\nexport function lsrSync () {\n\tconst basedir = resolvePath( arguments );\n\n\tlet result = [];\n\n\tfunction processdir ( dir ) {\n\t\tfs.readdirSync( dir ).forEach( file => {\n\t\t\tconst filepath = dir + sep + file;\n\n\t\t\tif ( fs.statSync( filepath ).isDirectory() ) {\n\t\t\t\tprocessdir( filepath );\n\t\t\t} else {\n\t\t\t\tresult.push( filepath.replace( basedir + sep, '' ) );\n\t\t\t}\n\t\t});\n\t}\n\n\tprocessdir( basedir );\n\treturn result;\n}","import * as fs from 'graceful-fs';\nimport { dirname } from 'path';\nimport mkdirp from 'mkdirp';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nexport function copyFile () {\n\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { resolvedPath: dest, options: writeOptions } = resolvePathAndOptions( arguments );\n\n\t\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\t\tmkdirp( dirname( dest ), err => {\n\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\treject( err );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst readStream = fs.createReadStream( src, readOptions );\n\t\t\t\t\t\tconst writeStream = fs.createWriteStream( dest, writeOptions );\n\n\t\t\t\t\t\treadStream.on( 'error', reject );\n\t\t\t\t\t\twriteStream.on( 'error', reject );\n\n\t\t\t\t\t\twriteStream.on( 'close', fulfil );\n\n\t\t\t\t\t\treadStream.pipe( writeStream );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function copyFileSync () {\n\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { resolvedPath: dest, options: writeOptions } = resolvePathAndOptions( arguments );\n\n\t\t\tconst data = fs.readFileSync( src, readOptions );\n\n\t\t\tmkdirp.sync( dirname( dest ) );\n\t\t\tfs.writeFileSync( dest, data, writeOptions );\n\t\t}\n\t};\n}","import { sep } from 'path';\nimport * as fs from 'graceful-fs';\nimport mkdirp from 'mkdirp';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nexport function copydir () {\n\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { resolvedPath: dest, options: writeOptions } = resolvePathAndOptions( arguments );\n\n\t\t\tfunction copydir ( src, dest, cb ) {\n\t\t\t\tmkdirp( dest, err => {\n\t\t\t\t\tif ( err ) return cb( err );\n\n\t\t\t\t\tfs.readdir( src, ( err, files ) => {\n\t\t\t\t\t\tif ( err ) return cb( err );\n\n\t\t\t\t\t\tlet remaining = files.length;\n\n\t\t\t\t\t\tif ( !remaining ) return cb();\n\n\t\t\t\t\t\tfunction check ( err ) {\n\t\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\t\treturn cb( err );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( !--remaining ) {\n\t\t\t\t\t\t\t\tcb();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfiles.forEach( function ( filename ) {\n\t\t\t\t\t\t\tconst srcpath = src + sep + filename;\n\t\t\t\t\t\t\tconst destpath = dest + sep + filename;\n\n\t\t\t\t\t\t\tfs.stat( srcpath, ( err, stats ) => {\n\t\t\t\t\t\t\t\tvar readStream, writeStream;\n\n\t\t\t\t\t\t\t\tif ( stats.isDirectory() ) {\n\t\t\t\t\t\t\t\t\treturn copydir( srcpath, destpath, check );\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treadStream = fs.createReadStream( srcpath, readOptions );\n\t\t\t\t\t\t\t\twriteStream = fs.createWriteStream( destpath, writeOptions );\n\n\t\t\t\t\t\t\t\treadStream.on( 'error', cb );\n\t\t\t\t\t\t\t\twriteStream.on( 'error', cb );\n\n\t\t\t\t\t\t\t\twriteStream.on( 'close', check );\n\n\t\t\t\t\t\t\t\treadStream.pipe( writeStream );\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\t\tcopydir( src, dest, err => {\n\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\treject( err );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfulfil();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function copydirSync () {\n\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { resolvedPath: dest, options: writeOptions } = resolvePathAndOptions( arguments );\n\n\t\t\tfunction copydir ( src, dest ) {\n\t\t\t\tmkdirp.sync( dest );\n\n\t\t\t\tfs.readdirSync( src ).forEach( filename => {\n\t\t\t\t\tconst srcpath = src + sep + filename;\n\t\t\t\t\tconst destpath = dest + sep + filename;\n\n\t\t\t\t\tif ( fs.statSync( srcpath ).isDirectory() ) {\n\t\t\t\t\t\treturn copydir( srcpath, destpath );\n\t\t\t\t\t}\n\n\t\t\t\t\tconst data = fs.readFileSync( srcpath, readOptions );\n\t\t\t\t\tfs.writeFileSync( destpath, data, writeOptions );\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcopydir( src, dest );\n\t\t}\n\t};\n}","import * as fs from 'graceful-fs';\nimport { dirname } from 'path';\nimport mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\n\nexport const writeFile = asyncMethod( 'writeFile' );\nexport const appendFile = asyncMethod( 'appendFile' );\n\nexport const writeFileSync = syncMethod( 'writeFileSync' );\nexport const appendFileSync = syncMethod( 'appendFileSync' );\n\nfunction normaliseArguments ( args ) {\n\targs = Array.prototype.slice.call( args, 0 );\n\tlet opts = {};\n\n\tif ( typeof args[ args.length - 1 ] === 'object' && !( args[ args.length - 1 ] instanceof Buffer ) ) {\n\t\topts = args.pop();\n\t}\n\n\treturn { opts, data: args.pop(), dest: resolvePath( args ) };\n}\n\nfunction asyncMethod ( methodName ) {\n\treturn function () {\n\t\tconst { dest, data, opts } = normaliseArguments( arguments );\n\n\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\tmkdirp( dirname( dest ), err => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\tfs[ methodName ]( dest, data, opts, err => {\n\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfulfil( data );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n}\n\nfunction syncMethod ( methodName ) {\n\treturn function () {\n\t\tconst { dest, data } = normaliseArguments( arguments );\n\n\t\tmkdirp.sync( dirname( dest ) );\n\t\treturn fs[ methodName ]( dest, data );\n\t};\n}\n","import { dirname } from 'path';\nimport * as fs from 'graceful-fs';\nimport mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nexport function symlink () {\n\tconst src = resolvePath( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { options, resolvedPath: dest } = resolvePathAndOptions( arguments );\n\n\t\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\t\tmkdirp( dirname( dest ), err => {\n\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\treject( err );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfs.symlink( src, dest, options.type, err => {\n\t\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfulfil();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function symlinkSync () {\n\tconst src = resolvePath( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { options, resolvedPath: dest } = resolvePathAndOptions( arguments );\n\t\t\tmkdirp.sync( dirname( dest ) );\n\t\t\treturn fs.symlinkSync( src, dest, options.type );\n\t\t}\n\t};\n}","import { dirname } from 'path';\nimport * as fs from 'graceful-fs';\nimport mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\n\nfunction normaliseArguments ( args ) {\n\tlet options;\n\tlet flags;\n\tlet i;\n\n\tif ( typeof args[ args.length - 1 ] === 'object' ) {\n\t\toptions = args[ args.length - 1 ];\n\t\tflags = args[ args.length - 2 ];\n\t\ti = args.length - 2;\n\t} else {\n\t\toptions = {};\n\t\tflags = args[ args.length - 1 ];\n\t\ti = args.length - 1;\n\t}\n\n\tlet pathargs = new Array( i );\n\twhile ( i-- ) {\n\t\tpathargs[i] = args[i];\n\t}\n\n\tconst resolvedPath = resolvePath( pathargs );\n\n\treturn { resolvedPath, options, flags };\n}\n\nfunction bailIfExists ( src, flags, mode ) {\n\tlet alreadyExists;\n\n\ttry {\n\t\tfs.statSync( src );\n\t\talreadyExists = true;\n\t} catch ( err ) {\n\t\tif ( err.code !== 'ENOENT' ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tif ( alreadyExists ) {\n\t\t// attempt the operation = that way, we get the intended error message\n\t\t// TODO can't we just do this in the first place?\n\t\tfs.openSync( src, flags, mode );\n\t}\n}\n\nexport function open () {\n\tconst { resolvedPath: src, options, flags } = normaliseArguments( arguments );\n\n\tif ( /^.x/.test( flags ) ) {\n\t\tbailIfExists( src, flags, options.mode );\n\t}\n\n\treturn new Promise( ( fulfil, reject ) => {\n\t\tfunction open () {\n\t\t\tfs.open( src, flags, options.mode, ( err, fd ) => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\tfulfil( fd );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// create dirs if necessary\n\t\tif ( /^[wa]/.test( flags ) ) {\n\t\t\tmkdirp( dirname( src ), err => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\topen();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\topen();\n\t\t}\n\t});\n}\n\n\nexport function openSync () {\n\tconst { resolvedPath: src, options, flags } = normaliseArguments( arguments );\n\n\tif ( /^.x/.test( flags ) ) {\n\t\tbailIfExists( src, flags, options.mode );\n\t}\n\n\t// create dirs if necessary\n\tif ( /^[wa]/.test( flags ) ) {\n\t\tmkdirp.sync( dirname( src ) );\n\t}\n\n\treturn fs.openSync( src, flags, options.mode );\n}","import mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\n\nexport function mkdir () {\n\tconst dir = resolvePath( arguments );\n\n\treturn new Promise( ( fulfil, reject ) => {\n\t\tmkdirp( dir, err => {\n\t\t\tif ( err ) {\n\t\t\t\treject( err );\n\t\t\t} else {\n\t\t\t\tfulfil();\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport function mkdirSync () {\n\tconst dir = resolvePath( arguments );\n\tmkdirp.sync( dir );\n}","import * as fs from 'graceful-fs';\nimport { dirname } from 'path';\nimport mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\n\nexport const rename = asyncMethod( 'rename' );\nexport const link = asyncMethod( 'link' );\n\nexport const renameSync = syncMethod( 'renameSync' );\nexport const linkSync = syncMethod( 'linkSync' );\n\nfunction asyncMethod ( methodName ) {\n\treturn function () {\n\t\tconst src = resolvePath( arguments );\n\n\t\treturn {\n\t\t\tto () {\n\t\t\t\tconst dest = resolvePath( arguments );\n\n\t\t\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\t\t\tmkdirp( dirname( dest ), err => {\n\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs[ methodName ]( src, dest, err => {\n\t\t\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfulfil();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n}\n\nfunction syncMethod ( methodName ) {\n\treturn function () {\n\t\tconst src = resolvePath( arguments );\n\n\t\treturn {\n\t\t\tto () {\n\t\t\t\tconst dest = resolvePath( arguments );\n\n\t\t\t\tmkdirp.sync( dirname( dest ) );\n\t\t\t\treturn fs[ methodName ]( src, dest );\n\t\t\t}\n\t\t};\n\t};\n}","import * as fs from 'graceful-fs';\nimport resolvePath from '../utils/resolvePath';\n\nexport function exists () {\n\tconst target = resolvePath( arguments );\n\n\treturn new Promise( fulfil => {\n\t\tfs.exists( target, exists => fulfil( exists ) );\n\t});\n}\n\nexport function existsSync () {\n\treturn fs.existsSync( resolvePath( arguments ) );\n}","import * as fs from 'graceful-fs';\nimport { dirname } from 'path';\nimport mkdirp from 'mkdirp';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nexport function createReadStream () {\n\tconst { resolvedPath, options } = resolvePathAndOptions( arguments );\n\treturn fs.createReadStream( resolvedPath, options );\n}\n\nexport function createWriteStream () {\n\tconst { resolvedPath, options } = resolvePathAndOptions( arguments );\n\n\tmkdirp.sync( dirname( resolvedPath ) );\n\treturn fs.createWriteStream( resolvedPath, options );\n}","import { resolve } from 'path';\n\nexport default function resolvePathAndOptions ( args ) {\n\tlet options;\n\tlet pathargs;\n\n\tif ( typeof args[ args.length - 1 ] === 'object' ) {\n\t\toptions = args[ args.length - 1 ];\n\n\t\tlet i = args.length - 1;\n\t\tpathargs = new Array( i );\n\n\t\twhile ( i-- ) {\n\t\t\tpathargs[i] = args[i];\n\t\t}\n\t} else {\n\t\toptions = {};\n\t\tpathargs = args;\n\t}\n\n\tconst resolvedPath = resolve.apply( null, pathargs );\n\n\treturn { options, resolvedPath };\n}","import * as fs from 'graceful-fs';\n\nexport function asyncFileDescriptorMethod ( methodName ) {\n\treturn function () {\n\t\tlet args = [];\n\t\tlet i = arguments.length;\n\n\t\twhile ( i-- ) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\targs.push( ( err, result ) => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\tfulfil( result );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfs[ methodName ].apply( fs, args );\n\t\t});\n\t};\n}","import * as fs from 'graceful-fs';\nimport resolvePath from '../utils/resolvePath';\n\nfunction normaliseArguments ( args ) {\n\tconst len = args.length;\n\n\tlet buildingPath = true;\n\tlet pathargs = [];\n\tlet normalised = [ null ]; // null is a placeholder for the resolved path\n\tlet i;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tif ( buildingPath && typeof args[i] === 'string' ) {\n\t\t\tpathargs[i] = args[i];\n\t\t} else {\n\t\t\tbuildingPath = false;\n\t\t\tnormalised.push( args[i] );\n\t\t}\n\t}\n\n\tnormalised[0] = resolvePath( pathargs );\n\n\treturn normalised;\n}\n\nexport function asyncMethod ( methodName ) {\n\treturn function () {\n\t\tconst args = normaliseArguments( arguments );\n\n\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\targs.push( ( err, result ) => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\tfulfil( result );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfs[ methodName ].apply( fs, args );\n\t\t});\n\t};\n}\n\nexport function syncMethod ( methodName ) {\n\treturn function () {\n\t\tconst args = normaliseArguments( arguments );\n\t\treturn fs[ methodName ].apply( fs, args );\n\t};\n}","import { resolve } from 'path';\n\nexport default function resolvePath ( args ) {\n\treturn resolve.apply( null, args );\n}"],"names":[],"mappings":"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"}