{"version":3,"names":["DEFAULT","importSource","runtime","pragma","pragmaFrag","JSX_SOURCE_ANNOTATION_REGEX","JSX_RUNTIME_ANNOTATION_REGEX","JSX_ANNOTATION_REGEX","JSX_FRAG_ANNOTATION_REGEX","get","pass","name","set","v","hasProto","node","properties","some","value","t","isObjectProperty","computed","shorthand","isIdentifier","key","isStringLiteral","createPlugin","development","declare","_","options","pure","PURE_ANNOTATION","throwIfNamespace","RUNTIME_DEFAULT","IMPORT_SOURCE_DEFAULT","PRAGMA_DEFAULT","PRAGMA_FRAG_DEFAULT","useSpread","useBuiltIns","Error","injectMetaPropertiesVisitor","JSXOpeningElement","path","state","attributes","isThisAllowed","scope","push","jsxAttribute","jsxIdentifier","jsxExpressionContainer","thisExpression","makeSource","pushContainer","inherits","jsx","visitor","JSXNamespacedName","buildCodeFrameError","JSXSpreadChild","Program","enter","file","source","sourceSet","pragmaSet","pragmaFragSet","ast","comments","comment","sourceMatches","exec","runtimeMatches","jsxMatches","jsxFragMatches","createElement","toMemberExpression","fragment","cloneNode","define","id","createImportLazily","traverse","JSXFragment","frag","memberExpressionToJSX","replaceWith","jsxElement","jsxOpeningElement","openingFragment","jsxClosingElement","children","JSXElement","exit","callExpr","shouldUseCreateElement","buildCreateElementCall","buildJSXElementCall","JSXAttribute","isJSXElement","isDerivedClass","classPath","superClass","isFunctionParent","isArrowFunctionExpression","isMethod","kind","parentPath","isTSModuleBlock","parent","call","args","callExpression","annotateAsPure","openingPath","seenPropsSpread","i","length","attr","isJSXAttribute","isJSXSpreadAttribute","convertJSXIdentifier","isJSXIdentifier","isReferenced","isValidIdentifier","type","stringLiteral","isJSXMemberExpression","memberExpression","object","property","isJSXNamespacedName","namespace","convertAttributeValue","isJSXExpressionContainer","expression","accumulateAttribute","array","attribute","arg","argument","isObjectExpression","spreadElement","booleanLiteral","replace","extra","raw","objectProperty","buildChildrenProperty","childrenNode","arrayExpression","undefined","identifier","getTag","attribsArray","extracted","Object","create","sourceSelfError","keyValue","react","buildChildren","attribs","buildJSXOpeningElementAttributes","objectExpression","buildUndefinedNode","__source","__self","props","reduce","buildCreateElementOpeningElementAttributes","tagExpr","tagName","isCompatTag","objs","start","forEach","prop","isSpreadElement","slice","nullLiteral","unshift","helper","addHelper","found","getSource","importName","actualSource","isModule","reference","addNamed","importedInterop","importPosition","addNamespace","split","map","expr","jsxMemberExpression","location","loc","fileNameIdentifier","filename","generateUidIdentifier","getProgramParent","init","makeTrace","line","column","lineNumber","column0Based","fileLineLiteral","numericLiteral","fileColumnLiteral","template","pluginName"],"sources":["../src/create-plugin.ts"],"sourcesContent":["import jsx from \"@babel/plugin-syntax-jsx\";\nimport { declare } from \"@babel/helper-plugin-utils\";\nimport { template, types as t } from \"@babel/core\";\nimport type { PluginPass } from \"@babel/core\";\nimport type { NodePath, Scope, Visitor } from \"@babel/traverse\";\nimport { addNamed, addNamespace, isModule } from \"@babel/helper-module-imports\";\nimport annotateAsPure from \"@babel/helper-annotate-as-pure\";\nimport type {\n  CallExpression,\n  Class,\n  Expression,\n  Identifier,\n  JSXAttribute,\n  JSXElement,\n  JSXOpeningElement,\n  JSXSpreadAttribute,\n  MemberExpression,\n  ObjectExpression,\n  Program,\n} from \"@babel/types\";\n\nconst DEFAULT = {\n  importSource: \"react\",\n  runtime: \"automatic\",\n  pragma: \"React.createElement\",\n  pragmaFrag: \"React.Fragment\",\n};\n\nconst JSX_SOURCE_ANNOTATION_REGEX =\n  /^\\s*\\*?\\s*@jsxImportSource\\s+([^\\s]+)\\s*$/m;\nconst JSX_RUNTIME_ANNOTATION_REGEX = /^\\s*\\*?\\s*@jsxRuntime\\s+([^\\s]+)\\s*$/m;\n\nconst JSX_ANNOTATION_REGEX = /^\\s*\\*?\\s*@jsx\\s+([^\\s]+)\\s*$/m;\nconst JSX_FRAG_ANNOTATION_REGEX = /^\\s*\\*?\\s*@jsxFrag\\s+([^\\s]+)\\s*$/m;\n\nconst get = (pass: PluginPass, name: string) =>\n  pass.get(`@babel/plugin-react-jsx/${name}`);\nconst set = (pass: PluginPass, name: string, v: any) =>\n  pass.set(`@babel/plugin-react-jsx/${name}`, v);\n\nfunction hasProto(node: t.ObjectExpression) {\n  return node.properties.some(\n    value =>\n      t.isObjectProperty(value, { computed: false, shorthand: false }) &&\n      (t.isIdentifier(value.key, { name: \"__proto__\" }) ||\n        t.isStringLiteral(value.key, { value: \"__proto__\" })),\n  );\n}\n\nexport interface Options {\n  filter?: (node: t.Node, pass: PluginPass) => boolean;\n  importSource?: string;\n  pragma?: string;\n  pragmaFrag?: string;\n  pure?: string;\n  runtime?: \"automatic\" | \"classic\";\n  throwIfNamespace?: boolean;\n  useBuiltIns: boolean;\n  useSpread?: boolean;\n}\nexport default function createPlugin({\n  name,\n  development,\n}: {\n  name: string;\n  development: boolean;\n}) {\n  return declare((_, options: Options) => {\n    const {\n      pure: PURE_ANNOTATION,\n\n      throwIfNamespace = true,\n\n      runtime: RUNTIME_DEFAULT = process.env.BABEL_8_BREAKING\n        ? \"automatic\"\n        : development\n        ? \"automatic\"\n        : \"classic\",\n\n      importSource: IMPORT_SOURCE_DEFAULT = DEFAULT.importSource,\n      pragma: PRAGMA_DEFAULT = DEFAULT.pragma,\n      pragmaFrag: PRAGMA_FRAG_DEFAULT = DEFAULT.pragmaFrag,\n    } = options;\n\n    if (process.env.BABEL_8_BREAKING) {\n      if (\"useSpread\" in options) {\n        throw new Error(\n          '@babel/plugin-transform-react-jsx: Since Babel 8, an inline object with spread elements is always used, and the \"useSpread\" option is no longer available. Please remove it from your config.',\n        );\n      }\n\n      if (\"useBuiltIns\" in options) {\n        const useBuiltInsFormatted = JSON.stringify(options.useBuiltIns);\n        throw new Error(\n          `@babel/plugin-transform-react-jsx: Since \"useBuiltIns\" is removed in Babel 8, you can remove it from the config.\n- Babel 8 now transforms JSX spread to object spread. If you need to transpile object spread with\n\\`useBuiltIns: ${useBuiltInsFormatted}\\`, you can use the following config\n{\n  \"plugins\": [\n    \"@babel/plugin-transform-react-jsx\"\n    [\"@babel/plugin-proposal-object-rest-spread\", { \"loose\": true, \"useBuiltIns\": ${useBuiltInsFormatted} }]\n  ]\n}`,\n        );\n      }\n    } else {\n      // eslint-disable-next-line no-var\n      var { useSpread = false, useBuiltIns = false } = options;\n\n      if (RUNTIME_DEFAULT === \"classic\") {\n        if (typeof useSpread !== \"boolean\") {\n          throw new Error(\n            \"transform-react-jsx currently only accepts a boolean option for \" +\n              \"useSpread (defaults to false)\",\n          );\n        }\n\n        if (typeof useBuiltIns !== \"boolean\") {\n          throw new Error(\n            \"transform-react-jsx currently only accepts a boolean option for \" +\n              \"useBuiltIns (defaults to false)\",\n          );\n        }\n\n        if (useSpread && useBuiltIns) {\n          throw new Error(\n            \"transform-react-jsx currently only accepts useBuiltIns or useSpread \" +\n              \"but not both\",\n          );\n        }\n      }\n    }\n\n    const injectMetaPropertiesVisitor: Visitor<PluginPass> = {\n      JSXOpeningElement(path, state) {\n        const attributes = [];\n        if (isThisAllowed(path.scope)) {\n          attributes.push(\n            t.jsxAttribute(\n              t.jsxIdentifier(\"__self\"),\n              t.jsxExpressionContainer(t.thisExpression()),\n            ),\n          );\n        }\n        attributes.push(\n          t.jsxAttribute(\n            t.jsxIdentifier(\"__source\"),\n            t.jsxExpressionContainer(makeSource(path, state)),\n          ),\n        );\n        path.pushContainer(\"attributes\", attributes);\n      },\n    };\n\n    return {\n      name,\n      inherits: jsx,\n      visitor: {\n        JSXNamespacedName(path) {\n          if (throwIfNamespace) {\n            throw path.buildCodeFrameError(\n              `Namespace tags are not supported by default. React's JSX doesn't support namespace tags. \\\nYou can set \\`throwIfNamespace: false\\` to bypass this warning.`,\n            );\n          }\n        },\n\n        JSXSpreadChild(path) {\n          throw path.buildCodeFrameError(\n            \"Spread children are not supported in React.\",\n          );\n        },\n\n        Program: {\n          enter(path, state) {\n            const { file } = state;\n            let runtime: string = RUNTIME_DEFAULT;\n\n            let source: string = IMPORT_SOURCE_DEFAULT;\n            let pragma: string = PRAGMA_DEFAULT;\n            let pragmaFrag: string = PRAGMA_FRAG_DEFAULT;\n\n            let sourceSet = !!options.importSource;\n            let pragmaSet = !!options.pragma;\n            let pragmaFragSet = !!options.pragmaFrag;\n\n            if (file.ast.comments) {\n              for (const comment of file.ast.comments) {\n                const sourceMatches = JSX_SOURCE_ANNOTATION_REGEX.exec(\n                  comment.value,\n                );\n                if (sourceMatches) {\n                  source = sourceMatches[1];\n                  sourceSet = true;\n                }\n\n                const runtimeMatches = JSX_RUNTIME_ANNOTATION_REGEX.exec(\n                  comment.value,\n                );\n                if (runtimeMatches) {\n                  runtime = runtimeMatches[1];\n                }\n\n                const jsxMatches = JSX_ANNOTATION_REGEX.exec(comment.value);\n                if (jsxMatches) {\n                  pragma = jsxMatches[1];\n                  pragmaSet = true;\n                }\n                const jsxFragMatches = JSX_FRAG_ANNOTATION_REGEX.exec(\n                  comment.value,\n                );\n                if (jsxFragMatches) {\n                  pragmaFrag = jsxFragMatches[1];\n                  pragmaFragSet = true;\n                }\n              }\n            }\n\n            set(state, \"runtime\", runtime);\n            if (runtime === \"classic\") {\n              if (sourceSet) {\n                throw path.buildCodeFrameError(\n                  `importSource cannot be set when runtime is classic.`,\n                );\n              }\n\n              const createElement = toMemberExpression(pragma);\n              const fragment = toMemberExpression(pragmaFrag);\n\n              set(state, \"id/createElement\", () => t.cloneNode(createElement));\n              set(state, \"id/fragment\", () => t.cloneNode(fragment));\n\n              set(state, \"defaultPure\", pragma === DEFAULT.pragma);\n            } else if (runtime === \"automatic\") {\n              if (pragmaSet || pragmaFragSet) {\n                throw path.buildCodeFrameError(\n                  `pragma and pragmaFrag cannot be set when runtime is automatic.`,\n                );\n              }\n\n              const define = (name: string, id: string) =>\n                set(state, name, createImportLazily(state, path, id, source));\n\n              define(\"id/jsx\", development ? \"jsxDEV\" : \"jsx\");\n              define(\"id/jsxs\", development ? \"jsxDEV\" : \"jsxs\");\n              define(\"id/createElement\", \"createElement\");\n              define(\"id/fragment\", \"Fragment\");\n\n              set(state, \"defaultPure\", source === DEFAULT.importSource);\n            } else {\n              throw path.buildCodeFrameError(\n                `Runtime must be either \"classic\" or \"automatic\".`,\n              );\n            }\n\n            if (development) {\n              path.traverse(injectMetaPropertiesVisitor, state);\n            }\n          },\n\n          // TODO (Babel 8): Decide if this should be removed or brought back.\n          // see: https://github.com/babel/babel/pull/12253#discussion_r513086528\n          //\n          // exit(path, state) {\n          //   if (\n          //     get(state, \"runtime\") === \"classic\" &&\n          //     get(state, \"pragmaSet\") &&\n          //     get(state, \"usedFragment\") &&\n          //     !get(state, \"pragmaFragSet\")\n          //   ) {\n          //     throw new Error(\n          //       \"transform-react-jsx: pragma has been set but \" +\n          //         \"pragmaFrag has not been set\",\n          //     );\n          //   }\n          // },\n        },\n\n        JSXFragment(path, file) {\n          // <>...</>  ->  <React.Fragment>...</React.Fragment>\n\n          const frag = memberExpressionToJSX(get(file, \"id/fragment\")());\n\n          path.replaceWith(\n            t.inherits(\n              t.jsxElement(\n                t.inherits(\n                  t.jsxOpeningElement(frag, []),\n                  path.node.openingFragment,\n                ),\n                t.jsxClosingElement(t.cloneNode(frag)),\n                path.node.children,\n              ),\n              path.node,\n            ),\n          );\n        },\n\n        JSXElement: {\n          exit(path, file) {\n            let callExpr;\n            if (\n              get(file, \"runtime\") === \"classic\" ||\n              shouldUseCreateElement(path)\n            ) {\n              callExpr = buildCreateElementCall(path, file);\n            } else {\n              callExpr = buildJSXElementCall(path, file);\n            }\n\n            path.replaceWith(t.inherits(callExpr, path.node));\n          },\n        },\n\n        JSXAttribute(path) {\n          if (t.isJSXElement(path.node.value)) {\n            path.node.value = t.jsxExpressionContainer(path.node.value);\n          }\n        },\n      },\n    };\n\n    // Returns whether the class has specified a superclass.\n    function isDerivedClass(classPath: NodePath<Class>) {\n      return classPath.node.superClass !== null;\n    }\n\n    // Returns whether `this` is allowed at given scope.\n    function isThisAllowed(scope: Scope) {\n      // This specifically skips arrow functions as they do not rewrite `this`.\n      do {\n        const { path } = scope;\n        if (path.isFunctionParent() && !path.isArrowFunctionExpression()) {\n          if (!path.isMethod()) {\n            // If the closest parent is a regular function, `this` will be rebound, therefore it is fine to use `this`.\n            return true;\n          }\n          // Current node is within a method, so we need to check if the method is a constructor.\n          if (path.node.kind !== \"constructor\") {\n            // We are not in a constructor, therefore it is always fine to use `this`.\n            return true;\n          }\n          // Now we are in a constructor. If it is a derived class, we do not reference `this`.\n          return !isDerivedClass(path.parentPath.parentPath as NodePath<Class>);\n        }\n        if (path.isTSModuleBlock()) {\n          // If the closeset parent is a TS Module block, `this` will not be allowed.\n          return false;\n        }\n      } while ((scope = scope.parent));\n      // We are not in a method or function. It is fine to use `this`.\n      return true;\n    }\n\n    function call(\n      pass: PluginPass,\n      name: string,\n      args: CallExpression[\"arguments\"],\n    ) {\n      const node = t.callExpression(get(pass, `id/${name}`)(), args);\n      if (PURE_ANNOTATION ?? get(pass, \"defaultPure\")) annotateAsPure(node);\n      return node;\n    }\n\n    // We want to use React.createElement, even in the case of\n    // jsx, for <div {...props} key={key} /> to distinguish it\n    // from <div key={key} {...props} />. This is an intermediary\n    // step while we deprecate key spread from props. Afterwards,\n    // we will stop using createElement in the transform.\n    function shouldUseCreateElement(path: NodePath<JSXElement>) {\n      const openingPath = path.get(\"openingElement\");\n      const attributes = openingPath.node.attributes;\n\n      let seenPropsSpread = false;\n      for (let i = 0; i < attributes.length; i++) {\n        const attr = attributes[i];\n        if (\n          seenPropsSpread &&\n          t.isJSXAttribute(attr) &&\n          attr.name.name === \"key\"\n        ) {\n          return true;\n        } else if (t.isJSXSpreadAttribute(attr)) {\n          seenPropsSpread = true;\n        }\n      }\n      return false;\n    }\n\n    function convertJSXIdentifier(\n      node: t.JSXIdentifier | t.JSXMemberExpression | t.JSXNamespacedName,\n      parent: t.JSXOpeningElement | t.JSXMemberExpression,\n    ): t.ThisExpression | t.StringLiteral | t.MemberExpression | t.Identifier {\n      if (t.isJSXIdentifier(node)) {\n        if (node.name === \"this\" && t.isReferenced(node, parent)) {\n          return t.thisExpression();\n        } else if (t.isValidIdentifier(node.name, false)) {\n          // @ts-expect-error cast AST type to Identifier\n          node.type = \"Identifier\";\n          return node as unknown as t.Identifier;\n        } else {\n          return t.stringLiteral(node.name);\n        }\n      } else if (t.isJSXMemberExpression(node)) {\n        return t.memberExpression(\n          convertJSXIdentifier(node.object, node),\n          convertJSXIdentifier(node.property, node),\n        );\n      } else if (t.isJSXNamespacedName(node)) {\n        /**\n         * If the flag \"throwIfNamespace\" is false\n         * print XMLNamespace like string literal\n         */\n        return t.stringLiteral(`${node.namespace.name}:${node.name.name}`);\n      }\n\n      // todo: this branch should be unreachable\n      return node;\n    }\n\n    function convertAttributeValue(\n      node: t.JSXAttribute[\"value\"] | t.BooleanLiteral,\n    ) {\n      if (t.isJSXExpressionContainer(node)) {\n        return node.expression;\n      } else {\n        return node;\n      }\n    }\n\n    function accumulateAttribute(\n      array: ObjectExpression[\"properties\"],\n      attribute: NodePath<JSXAttribute | JSXSpreadAttribute>,\n    ) {\n      if (t.isJSXSpreadAttribute(attribute.node)) {\n        const arg = attribute.node.argument;\n        // Collect properties into props array if spreading object expression\n        if (t.isObjectExpression(arg) && !hasProto(arg)) {\n          array.push(...arg.properties);\n        } else {\n          array.push(t.spreadElement(arg));\n        }\n        return array;\n      }\n\n      const value = convertAttributeValue(\n        attribute.node.name.name !== \"key\"\n          ? attribute.node.value || t.booleanLiteral(true)\n          : attribute.node.value,\n      );\n\n      if (attribute.node.name.name === \"key\" && value === null) {\n        throw attribute.buildCodeFrameError(\n          'Please provide an explicit key value. Using \"key\" as a shorthand for \"key={true}\" is not allowed.',\n        );\n      }\n\n      if (\n        t.isStringLiteral(value) &&\n        !t.isJSXExpressionContainer(attribute.node.value)\n      ) {\n        value.value = value.value.replace(/\\n\\s+/g, \" \");\n\n        // \"raw\" JSXText should not be used from a StringLiteral because it needs to be escaped.\n        delete value.extra?.raw;\n      }\n\n      if (t.isJSXNamespacedName(attribute.node.name)) {\n        // @ts-expect-error mutating AST\n        attribute.node.name = t.stringLiteral(\n          attribute.node.name.namespace.name +\n            \":\" +\n            attribute.node.name.name.name,\n        );\n      } else if (t.isValidIdentifier(attribute.node.name.name, false)) {\n        // @ts-expect-error mutating AST\n        attribute.node.name.type = \"Identifier\";\n      } else {\n        // @ts-expect-error mutating AST\n        attribute.node.name = t.stringLiteral(attribute.node.name.name);\n      }\n\n      array.push(\n        t.inherits(\n          t.objectProperty(\n            // @ts-expect-error The attribute.node.name is an Identifier now\n            attribute.node.name,\n            value,\n          ),\n          attribute.node,\n        ),\n      );\n      return array;\n    }\n\n    function buildChildrenProperty(children: Expression[]) {\n      let childrenNode;\n      if (children.length === 1) {\n        childrenNode = children[0];\n      } else if (children.length > 1) {\n        childrenNode = t.arrayExpression(children);\n      } else {\n        return undefined;\n      }\n\n      return t.objectProperty(t.identifier(\"children\"), childrenNode);\n    }\n\n    // Builds JSX into:\n    // Production: React.jsx(type, arguments, key)\n    // Development: React.jsxDEV(type, arguments, key, isStaticChildren, source, self)\n    function buildJSXElementCall(path: NodePath<JSXElement>, file: PluginPass) {\n      const openingPath = path.get(\"openingElement\");\n      const args: t.Expression[] = [getTag(openingPath)];\n\n      const attribsArray = [];\n      const extracted = Object.create(null);\n\n      // for React.jsx, key, __source (dev), and __self (dev) is passed in as\n      // a separate argument rather than in the args object. We go through the\n      // props and filter out these three keywords so we can pass them in\n      // as separate arguments later\n      for (const attr of openingPath.get(\"attributes\")) {\n        if (attr.isJSXAttribute() && t.isJSXIdentifier(attr.node.name)) {\n          const { name } = attr.node.name;\n          switch (name) {\n            case \"__source\":\n            case \"__self\":\n              if (extracted[name]) throw sourceSelfError(path, name);\n            /* falls through */\n            case \"key\": {\n              const keyValue = convertAttributeValue(attr.node.value);\n              if (keyValue === null) {\n                throw attr.buildCodeFrameError(\n                  'Please provide an explicit key value. Using \"key\" as a shorthand for \"key={true}\" is not allowed.',\n                );\n              }\n\n              extracted[name] = keyValue;\n              break;\n            }\n            default:\n              attribsArray.push(attr);\n          }\n        } else {\n          attribsArray.push(attr);\n        }\n      }\n\n      const children = t.react.buildChildren(path.node);\n\n      let attribs: t.ObjectExpression;\n\n      if (attribsArray.length || children.length) {\n        attribs = buildJSXOpeningElementAttributes(\n          attribsArray,\n          //@ts-expect-error The children here contains JSXSpreadChild,\n          // which will be thrown later\n          children,\n        );\n      } else {\n        // attributes should never be null\n        attribs = t.objectExpression([]);\n      }\n\n      args.push(attribs);\n\n      if (development) {\n        // isStaticChildren, __source, and __self are only used in development\n        // automatically include __source and __self in this plugin\n        // so we can eliminate the need for separate Babel plugins in Babel 8\n        args.push(\n          extracted.key ?? path.scope.buildUndefinedNode(),\n          t.booleanLiteral(children.length > 1),\n        );\n        if (extracted.__source) {\n          args.push(extracted.__source);\n          if (extracted.__self) args.push(extracted.__self);\n        } else if (extracted.__self) {\n          args.push(path.scope.buildUndefinedNode(), extracted.__self);\n        }\n      } else if (extracted.key !== undefined) {\n        args.push(extracted.key);\n      }\n\n      return call(file, children.length > 1 ? \"jsxs\" : \"jsx\", args);\n    }\n\n    // Builds props for React.jsx. This function adds children into the props\n    // and ensures that props is always an object\n    function buildJSXOpeningElementAttributes(\n      attribs: NodePath<JSXAttribute | JSXSpreadAttribute>[],\n      children: Expression[],\n    ) {\n      const props = attribs.reduce(accumulateAttribute, []);\n\n      // In React.jsx, children is no longer a separate argument, but passed in\n      // through the argument object\n      if (children?.length > 0) {\n        props.push(buildChildrenProperty(children));\n      }\n\n      return t.objectExpression(props);\n    }\n\n    // Builds JSX into:\n    // Production: React.createElement(type, arguments, children)\n    // Development: React.createElement(type, arguments, children, source, self)\n    function buildCreateElementCall(\n      path: NodePath<JSXElement>,\n      file: PluginPass,\n    ) {\n      const openingPath = path.get(\"openingElement\");\n\n      return call(file, \"createElement\", [\n        getTag(openingPath),\n        buildCreateElementOpeningElementAttributes(\n          file,\n          path,\n          openingPath.get(\"attributes\"),\n        ),\n        // @ts-expect-error JSXSpreadChild has been transformed in convertAttributeValue\n        ...t.react.buildChildren(path.node),\n      ]);\n    }\n\n    function getTag(openingPath: NodePath<JSXOpeningElement>) {\n      const tagExpr = convertJSXIdentifier(\n        openingPath.node.name,\n        openingPath.node,\n      );\n\n      let tagName: string;\n      if (t.isIdentifier(tagExpr)) {\n        tagName = tagExpr.name;\n      } else if (t.isStringLiteral(tagExpr)) {\n        tagName = tagExpr.value;\n      }\n\n      if (t.react.isCompatTag(tagName)) {\n        return t.stringLiteral(tagName);\n      } else {\n        return tagExpr;\n      }\n    }\n\n    /**\n     * The logic for this is quite terse. It's because we need to\n     * support spread elements. We loop over all attributes,\n     * breaking on spreads, we then push a new object containing\n     * all prior attributes to an array for later processing.\n     */\n    function buildCreateElementOpeningElementAttributes(\n      file: PluginPass,\n      path: NodePath<JSXElement>,\n      attribs: NodePath<JSXAttribute | JSXSpreadAttribute>[],\n    ) {\n      const runtime = get(file, \"runtime\");\n      if (!process.env.BABEL_8_BREAKING) {\n        if (runtime !== \"automatic\") {\n          const objs = [];\n          const props = attribs.reduce(accumulateAttribute, []);\n\n          if (!useSpread) {\n            // Convert syntax to use multiple objects instead of spread\n            let start = 0;\n            props.forEach((prop, i) => {\n              if (t.isSpreadElement(prop)) {\n                if (i > start) {\n                  objs.push(t.objectExpression(props.slice(start, i)));\n                }\n                objs.push(prop.argument);\n                start = i + 1;\n              }\n            });\n            if (props.length > start) {\n              objs.push(t.objectExpression(props.slice(start)));\n            }\n          } else if (props.length) {\n            objs.push(t.objectExpression(props));\n          }\n\n          if (!objs.length) {\n            return t.nullLiteral();\n          }\n\n          if (objs.length === 1) {\n            if (\n              !(\n                t.isSpreadElement(props[0]) &&\n                // If an object expression is spread element's argument\n                // it is very likely to contain __proto__ and we should stop\n                // optimizing spread element\n                t.isObjectExpression(props[0].argument)\n              )\n            ) {\n              return objs[0];\n            }\n          }\n\n          // looks like we have multiple objects\n          if (!t.isObjectExpression(objs[0])) {\n            objs.unshift(t.objectExpression([]));\n          }\n\n          const helper = useBuiltIns\n            ? t.memberExpression(t.identifier(\"Object\"), t.identifier(\"assign\"))\n            : file.addHelper(\"extends\");\n\n          // spread it\n          return t.callExpression(helper, objs);\n        }\n      }\n\n      const props: ObjectExpression[\"properties\"] = [];\n      const found = Object.create(null);\n\n      for (const attr of attribs) {\n        const name =\n          t.isJSXAttribute(attr) &&\n          t.isJSXIdentifier(attr.name) &&\n          attr.name.name;\n\n        if (\n          runtime === \"automatic\" &&\n          (name === \"__source\" || name === \"__self\")\n        ) {\n          if (found[name]) throw sourceSelfError(path, name);\n          found[name] = true;\n        }\n\n        accumulateAttribute(props, attr);\n      }\n\n      return props.length === 1 &&\n        t.isSpreadElement(props[0]) &&\n        // If an object expression is spread element's argument\n        // it is very likely to contain __proto__ and we should stop\n        // optimizing spread element\n        !t.isObjectExpression(props[0].argument)\n        ? props[0].argument\n        : props.length > 0\n        ? t.objectExpression(props)\n        : t.nullLiteral();\n    }\n  });\n\n  function getSource(source: string, importName: string) {\n    switch (importName) {\n      case \"Fragment\":\n        return `${source}/${development ? \"jsx-dev-runtime\" : \"jsx-runtime\"}`;\n      case \"jsxDEV\":\n        return `${source}/jsx-dev-runtime`;\n      case \"jsx\":\n      case \"jsxs\":\n        return `${source}/jsx-runtime`;\n      case \"createElement\":\n        return source;\n    }\n  }\n\n  function createImportLazily(\n    pass: PluginPass,\n    path: NodePath<Program>,\n    importName: string,\n    source: string,\n  ): () => Identifier | MemberExpression {\n    return () => {\n      const actualSource = getSource(source, importName);\n      if (isModule(path)) {\n        let reference = get(pass, `imports/${importName}`);\n        if (reference) return t.cloneNode(reference);\n\n        reference = addNamed(path, importName, actualSource, {\n          importedInterop: \"uncompiled\",\n          importPosition: \"after\",\n        });\n        set(pass, `imports/${importName}`, reference);\n\n        return reference;\n      } else {\n        let reference = get(pass, `requires/${actualSource}`);\n        if (reference) {\n          reference = t.cloneNode(reference);\n        } else {\n          reference = addNamespace(path, actualSource, {\n            importedInterop: \"uncompiled\",\n          });\n          set(pass, `requires/${actualSource}`, reference);\n        }\n\n        return t.memberExpression(reference, t.identifier(importName));\n      }\n    };\n  }\n}\n\nfunction toMemberExpression(id: string): Identifier | MemberExpression {\n  return (\n    id\n      .split(\".\")\n      .map(name => t.identifier(name))\n      // @ts-expect-error - The Array#reduce does not have a signature\n      // where the type of initialial value differs from callback return type\n      .reduce((object, property) => t.memberExpression(object, property))\n  );\n}\n\nfunction memberExpressionToJSX(\n  expr: t.Node,\n): t.JSXMemberExpression | t.JSXIdentifier {\n  switch (expr.type) {\n    case \"Identifier\":\n      return t.jsxIdentifier(expr.name);\n    case \"MemberExpression\":\n      return t.jsxMemberExpression(\n        memberExpressionToJSX(expr.object),\n        memberExpressionToJSX(expr.property) as t.JSXIdentifier,\n      );\n    default:\n      throw new Error(\"Internal error: unknown member expression type\");\n  }\n}\n\nfunction makeSource(path: NodePath, state: PluginPass) {\n  const location = path.node.loc;\n  if (!location) {\n    // the element was generated and doesn't have location information\n    return path.scope.buildUndefinedNode();\n  }\n\n  // @ts-expect-error todo: avoid mutating PluginPass\n  if (!state.fileNameIdentifier) {\n    const { filename = \"\" } = state;\n\n    const fileNameIdentifier = path.scope.generateUidIdentifier(\"_jsxFileName\");\n    path.scope.getProgramParent().push({\n      id: fileNameIdentifier,\n      init: t.stringLiteral(filename),\n    });\n    // @ts-expect-error todo: avoid mutating PluginPass\n    state.fileNameIdentifier = fileNameIdentifier;\n  }\n\n  return makeTrace(\n    t.cloneNode(\n      // @ts-expect-error todo: avoid mutating PluginPass\n      state.fileNameIdentifier,\n    ),\n    location.start.line,\n    location.start.column,\n  );\n}\n\nfunction makeTrace(\n  fileNameIdentifier: Identifier,\n  lineNumber?: number,\n  column0Based?: number,\n) {\n  const fileLineLiteral =\n    lineNumber != null ? t.numericLiteral(lineNumber) : t.nullLiteral();\n\n  const fileColumnLiteral =\n    column0Based != null ? t.numericLiteral(column0Based + 1) : t.nullLiteral();\n\n  return template.expression.ast`{\n    fileName: ${fileNameIdentifier},\n    lineNumber: ${fileLineLiteral},\n    columnNumber: ${fileColumnLiteral},\n  }`;\n}\n\nfunction sourceSelfError(path: NodePath, name: string) {\n  const pluginName = `transform-react-jsx-${name.slice(2)}`;\n\n  return path.buildCodeFrameError(\n    `Duplicate ${name} prop found. You are most likely using the deprecated ${pluginName} Babel plugin. Both __source and __self are automatically set when using the automatic runtime. Please remove transform-react-jsx-source and transform-react-jsx-self from your Babel config.`,\n  );\n}\n"],"mappings":"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"}