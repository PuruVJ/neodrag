{"version":3,"file":"sander.cjs.js","sources":["../src/utils/resolvePath.js","../src/methodMakers/standardMethod.js","../src/methodMakers/fileDescriptorMethod.js","../src/utils/resolvePathAndOptions.js","../src/specialMethods/createReadStream-createWriteStream.js","../src/specialMethods/exists.js","../src/specialMethods/link-rename.js","../src/specialMethods/mkdir.js","../src/specialMethods/open.js","../src/specialMethods/symlink.js","../src/specialMethods/writeFile-appendFile.js","../src/extraMethods/copydir.js","../src/extraMethods/copyFile.js","../src/extraMethods/lsr.js","../src/extraMethods/rimraf.js","../src/extraMethods/symlinkOrCopy.js","../src/sander.js"],"sourcesContent":["import { resolve } from 'path';\n\nexport default function resolvePath ( args ) {\n\treturn resolve.apply( null, args );\n}","import * as fs from 'graceful-fs';\nimport resolvePath from '../utils/resolvePath';\n\nfunction normaliseArguments ( args ) {\n\tconst len = args.length;\n\n\tlet buildingPath = true;\n\tlet pathargs = [];\n\tlet normalised = [ null ]; // null is a placeholder for the resolved path\n\tlet i;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tif ( buildingPath && typeof args[i] === 'string' ) {\n\t\t\tpathargs[i] = args[i];\n\t\t} else {\n\t\t\tbuildingPath = false;\n\t\t\tnormalised.push( args[i] );\n\t\t}\n\t}\n\n\tnormalised[0] = resolvePath( pathargs );\n\n\treturn normalised;\n}\n\nexport function asyncMethod ( methodName ) {\n\treturn function () {\n\t\tconst args = normaliseArguments( arguments );\n\n\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\targs.push( ( err, result ) => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\tfulfil( result );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfs[ methodName ].apply( fs, args );\n\t\t});\n\t};\n}\n\nexport function syncMethod ( methodName ) {\n\treturn function () {\n\t\tconst args = normaliseArguments( arguments );\n\t\treturn fs[ methodName ].apply( fs, args );\n\t};\n}","import * as fs from 'graceful-fs';\n\nexport function asyncFileDescriptorMethod ( methodName ) {\n\treturn function () {\n\t\tlet args = [];\n\t\tlet i = arguments.length;\n\n\t\twhile ( i-- ) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\targs.push( ( err, result ) => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\tfulfil( result );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfs[ methodName ].apply( fs, args );\n\t\t});\n\t};\n}","import { resolve } from 'path';\n\nexport default function resolvePathAndOptions ( args ) {\n\tlet options;\n\tlet pathargs;\n\n\tif ( typeof args[ args.length - 1 ] === 'object' ) {\n\t\toptions = args[ args.length - 1 ];\n\n\t\tlet i = args.length - 1;\n\t\tpathargs = new Array( i );\n\n\t\twhile ( i-- ) {\n\t\t\tpathargs[i] = args[i];\n\t\t}\n\t} else {\n\t\toptions = {};\n\t\tpathargs = args;\n\t}\n\n\tconst resolvedPath = resolve.apply( null, pathargs );\n\n\treturn { options, resolvedPath };\n}","import * as fs from 'graceful-fs';\nimport { dirname } from 'path';\nimport mkdirp from 'mkdirp';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nexport function createReadStream () {\n\tconst { resolvedPath, options } = resolvePathAndOptions( arguments );\n\treturn fs.createReadStream( resolvedPath, options );\n}\n\nexport function createWriteStream () {\n\tconst { resolvedPath, options } = resolvePathAndOptions( arguments );\n\n\tmkdirp.sync( dirname( resolvedPath ) );\n\treturn fs.createWriteStream( resolvedPath, options );\n}","import * as fs from 'graceful-fs';\nimport resolvePath from '../utils/resolvePath';\n\nexport function exists () {\n\tconst target = resolvePath( arguments );\n\n\treturn new Promise( fulfil => {\n\t\tfs.exists( target, exists => fulfil( exists ) );\n\t});\n}\n\nexport function existsSync () {\n\treturn fs.existsSync( resolvePath( arguments ) );\n}","import * as fs from 'graceful-fs';\nimport { dirname } from 'path';\nimport mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\n\nexport const rename = asyncMethod( 'rename' );\nexport const link = asyncMethod( 'link' );\n\nexport const renameSync = syncMethod( 'renameSync' );\nexport const linkSync = syncMethod( 'linkSync' );\n\nfunction asyncMethod ( methodName ) {\n\treturn function () {\n\t\tconst src = resolvePath( arguments );\n\n\t\treturn {\n\t\t\tto () {\n\t\t\t\tconst dest = resolvePath( arguments );\n\n\t\t\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\t\t\tmkdirp( dirname( dest ), err => {\n\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs[ methodName ]( src, dest, err => {\n\t\t\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfulfil();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n}\n\nfunction syncMethod ( methodName ) {\n\treturn function () {\n\t\tconst src = resolvePath( arguments );\n\n\t\treturn {\n\t\t\tto () {\n\t\t\t\tconst dest = resolvePath( arguments );\n\n\t\t\t\tmkdirp.sync( dirname( dest ) );\n\t\t\t\treturn fs[ methodName ]( src, dest );\n\t\t\t}\n\t\t};\n\t};\n}","import mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\n\nexport function mkdir () {\n\tconst dir = resolvePath( arguments );\n\n\treturn new Promise( ( fulfil, reject ) => {\n\t\tmkdirp( dir, err => {\n\t\t\tif ( err ) {\n\t\t\t\treject( err );\n\t\t\t} else {\n\t\t\t\tfulfil();\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport function mkdirSync () {\n\tconst dir = resolvePath( arguments );\n\tmkdirp.sync( dir );\n}","import { dirname } from 'path';\nimport * as fs from 'graceful-fs';\nimport mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\n\nfunction normaliseArguments ( args ) {\n\tlet options;\n\tlet flags;\n\tlet i;\n\n\tif ( typeof args[ args.length - 1 ] === 'object' ) {\n\t\toptions = args[ args.length - 1 ];\n\t\tflags = args[ args.length - 2 ];\n\t\ti = args.length - 2;\n\t} else {\n\t\toptions = {};\n\t\tflags = args[ args.length - 1 ];\n\t\ti = args.length - 1;\n\t}\n\n\tlet pathargs = new Array( i );\n\twhile ( i-- ) {\n\t\tpathargs[i] = args[i];\n\t}\n\n\tconst resolvedPath = resolvePath( pathargs );\n\n\treturn { resolvedPath, options, flags };\n}\n\nfunction bailIfExists ( src, flags, mode ) {\n\tlet alreadyExists;\n\n\ttry {\n\t\tfs.statSync( src );\n\t\talreadyExists = true;\n\t} catch ( err ) {\n\t\tif ( err.code !== 'ENOENT' ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tif ( alreadyExists ) {\n\t\t// attempt the operation = that way, we get the intended error message\n\t\t// TODO can't we just do this in the first place?\n\t\tfs.openSync( src, flags, mode );\n\t}\n}\n\nexport function open () {\n\tconst { resolvedPath: src, options, flags } = normaliseArguments( arguments );\n\n\tif ( /^.x/.test( flags ) ) {\n\t\tbailIfExists( src, flags, options.mode );\n\t}\n\n\treturn new Promise( ( fulfil, reject ) => {\n\t\tfunction open () {\n\t\t\tfs.open( src, flags, options.mode, ( err, fd ) => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\tfulfil( fd );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// create dirs if necessary\n\t\tif ( /^[wa]/.test( flags ) ) {\n\t\t\tmkdirp( dirname( src ), err => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\topen();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\topen();\n\t\t}\n\t});\n}\n\n\nexport function openSync () {\n\tconst { resolvedPath: src, options, flags } = normaliseArguments( arguments );\n\n\tif ( /^.x/.test( flags ) ) {\n\t\tbailIfExists( src, flags, options.mode );\n\t}\n\n\t// create dirs if necessary\n\tif ( /^[wa]/.test( flags ) ) {\n\t\tmkdirp.sync( dirname( src ) );\n\t}\n\n\treturn fs.openSync( src, flags, options.mode );\n}","import { dirname } from 'path';\nimport * as fs from 'graceful-fs';\nimport mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nexport function symlink () {\n\tconst src = resolvePath( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { options, resolvedPath: dest } = resolvePathAndOptions( arguments );\n\n\t\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\t\tmkdirp( dirname( dest ), err => {\n\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\treject( err );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfs.symlink( src, dest, options.type, err => {\n\t\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfulfil();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function symlinkSync () {\n\tconst src = resolvePath( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { options, resolvedPath: dest } = resolvePathAndOptions( arguments );\n\t\t\tmkdirp.sync( dirname( dest ) );\n\t\t\treturn fs.symlinkSync( src, dest, options.type );\n\t\t}\n\t};\n}","import * as fs from 'graceful-fs';\nimport { dirname } from 'path';\nimport mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\n\nexport const writeFile = asyncMethod( 'writeFile' );\nexport const appendFile = asyncMethod( 'appendFile' );\n\nexport const writeFileSync = syncMethod( 'writeFileSync' );\nexport const appendFileSync = syncMethod( 'appendFileSync' );\n\nfunction normaliseArguments ( args ) {\n\targs = Array.prototype.slice.call( args, 0 );\n\tlet opts = {};\n\n\tif ( typeof args[ args.length - 1 ] === 'object' && !( args[ args.length - 1 ] instanceof Buffer ) ) {\n\t\topts = args.pop();\n\t}\n\n\treturn { opts, data: args.pop(), dest: resolvePath( args ) };\n}\n\nfunction asyncMethod ( methodName ) {\n\treturn function () {\n\t\tconst { dest, data, opts } = normaliseArguments( arguments );\n\n\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\tmkdirp( dirname( dest ), err => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\tfs[ methodName ]( dest, data, opts, err => {\n\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfulfil( data );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n}\n\nfunction syncMethod ( methodName ) {\n\treturn function () {\n\t\tconst { dest, data } = normaliseArguments( arguments );\n\n\t\tmkdirp.sync( dirname( dest ) );\n\t\treturn fs[ methodName ]( dest, data );\n\t};\n}\n","import { sep } from 'path';\nimport * as fs from 'graceful-fs';\nimport mkdirp from 'mkdirp';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nexport function copydir () {\n\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { resolvedPath: dest, options: writeOptions } = resolvePathAndOptions( arguments );\n\n\t\t\tfunction copydir ( src, dest, cb ) {\n\t\t\t\tmkdirp( dest, err => {\n\t\t\t\t\tif ( err ) return cb( err );\n\n\t\t\t\t\tfs.readdir( src, ( err, files ) => {\n\t\t\t\t\t\tif ( err ) return cb( err );\n\n\t\t\t\t\t\tlet remaining = files.length;\n\n\t\t\t\t\t\tif ( !remaining ) return cb();\n\n\t\t\t\t\t\tfunction check ( err ) {\n\t\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\t\treturn cb( err );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( !--remaining ) {\n\t\t\t\t\t\t\t\tcb();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfiles.forEach( function ( filename ) {\n\t\t\t\t\t\t\tconst srcpath = src + sep + filename;\n\t\t\t\t\t\t\tconst destpath = dest + sep + filename;\n\n\t\t\t\t\t\t\tfs.stat( srcpath, ( err, stats ) => {\n\t\t\t\t\t\t\t\tvar readStream, writeStream;\n\n\t\t\t\t\t\t\t\tif ( stats.isDirectory() ) {\n\t\t\t\t\t\t\t\t\treturn copydir( srcpath, destpath, check );\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treadStream = fs.createReadStream( srcpath, readOptions );\n\t\t\t\t\t\t\t\twriteStream = fs.createWriteStream( destpath, writeOptions );\n\n\t\t\t\t\t\t\t\treadStream.on( 'error', cb );\n\t\t\t\t\t\t\t\twriteStream.on( 'error', cb );\n\n\t\t\t\t\t\t\t\twriteStream.on( 'close', check );\n\n\t\t\t\t\t\t\t\treadStream.pipe( writeStream );\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\t\tcopydir( src, dest, err => {\n\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\treject( err );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfulfil();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function copydirSync () {\n\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { resolvedPath: dest, options: writeOptions } = resolvePathAndOptions( arguments );\n\n\t\t\tfunction copydir ( src, dest ) {\n\t\t\t\tmkdirp.sync( dest );\n\n\t\t\t\tfs.readdirSync( src ).forEach( filename => {\n\t\t\t\t\tconst srcpath = src + sep + filename;\n\t\t\t\t\tconst destpath = dest + sep + filename;\n\n\t\t\t\t\tif ( fs.statSync( srcpath ).isDirectory() ) {\n\t\t\t\t\t\treturn copydir( srcpath, destpath );\n\t\t\t\t\t}\n\n\t\t\t\t\tconst data = fs.readFileSync( srcpath, readOptions );\n\t\t\t\t\tfs.writeFileSync( destpath, data, writeOptions );\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcopydir( src, dest );\n\t\t}\n\t};\n}","import * as fs from 'graceful-fs';\nimport { dirname } from 'path';\nimport mkdirp from 'mkdirp';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nexport function copyFile () {\n\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { resolvedPath: dest, options: writeOptions } = resolvePathAndOptions( arguments );\n\n\t\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\t\tmkdirp( dirname( dest ), err => {\n\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\treject( err );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst readStream = fs.createReadStream( src, readOptions );\n\t\t\t\t\t\tconst writeStream = fs.createWriteStream( dest, writeOptions );\n\n\t\t\t\t\t\treadStream.on( 'error', reject );\n\t\t\t\t\t\twriteStream.on( 'error', reject );\n\n\t\t\t\t\t\twriteStream.on( 'close', fulfil );\n\n\t\t\t\t\t\treadStream.pipe( writeStream );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function copyFileSync () {\n\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { resolvedPath: dest, options: writeOptions } = resolvePathAndOptions( arguments );\n\n\t\t\tconst data = fs.readFileSync( src, readOptions );\n\n\t\t\tmkdirp.sync( dirname( dest ) );\n\t\t\tfs.writeFileSync( dest, data, writeOptions );\n\t\t}\n\t};\n}","import * as fs from 'fs';\nimport { resolve, sep } from 'path';\nimport resolvePath from '../utils/resolvePath';\n\nfunction walk ( dir, callback ) {\n\tlet results = [];\n\n\tfs.readdir( dir, ( err, files ) => {\n\t\tif ( err ) return callback( err );\n\n\t\tlet pending = files.length;\n\t\tif ( !pending ) return callback( null, results );\n\n\t\tfiles.forEach( file => {\n\t\t\tfile = resolve( dir, file );\n\n\t\t\tfs.stat( file, ( err, stats ) => {\n\t\t\t\tif ( stats && stats.isDirectory() ) {\n\t\t\t\t\twalk( file, ( err, res ) => {\n\t\t\t\t\t\tresults = results.concat( res );\n\t\t\t\t\t\tif ( !--pending ) callback( null, results );\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresults.push( file );\n\t\t\t\t\tif ( !--pending ) callback( null, results );\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n};\n\nexport function lsr () {\n\tconst basedir = resolvePath( arguments );\n\n\treturn new Promise( ( fulfil, reject ) => {\n\t\twalk( basedir, function ( err, result ) {\n\t\t\tif ( err ) return reject( err );\n\n\t\t\t// files should be relative to basedir\n\t\t\tconst index = basedir.length + 1;\n\t\t\tlet i = result.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tresult[i] = result[i].substring( index );\n\t\t\t}\n\n\t\t\tfulfil( result );\n\t\t});\n\t});\n}\n\nexport function lsrSync () {\n\tconst basedir = resolvePath( arguments );\n\n\tlet result = [];\n\n\tfunction processdir ( dir ) {\n\t\tfs.readdirSync( dir ).forEach( file => {\n\t\t\tconst filepath = dir + sep + file;\n\n\t\t\tif ( fs.statSync( filepath ).isDirectory() ) {\n\t\t\t\tprocessdir( filepath );\n\t\t\t} else {\n\t\t\t\tresult.push( filepath.replace( basedir + sep, '' ) );\n\t\t\t}\n\t\t});\n\t}\n\n\tprocessdir( basedir );\n\treturn result;\n}","import _rimraf from 'rimraf';\nimport resolvePath from '../utils/resolvePath';\n\nexport function rimraf () {\n\tconst target = resolvePath( arguments );\n\n\treturn new Promise( ( fulfil, reject ) => {\n\t\t_rimraf( target, err => {\n\t\t\tif ( err ) {\n\t\t\t\treject( err );\n\t\t\t} else {\n\t\t\t\tfulfil();\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport function rimrafSync () {\n\t_rimraf.sync( resolvePath( arguments ) );\n}","import { stat, statSync } from '../sander';\nimport { copydir, copydirSync } from './copydir';\nimport { copyFile, copyFileSync } from './copyFile';\nimport { symlink, symlinkSync } from '../specialMethods/symlink';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nconst isWindows = process.platform === 'win32';\n\nexport function symlinkOrCopy () {\n\tif ( isWindows ) {\n\t\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\t\tlet copyDirOrFileTo = stat( src )\n\t\t\t.then( stats => {\n\t\t\t\treturn ( stats.isDirectory() ? copydir : copyFile )\n\t\t\t\t\t.apply( null, arguments )\n\t\t\t\t\t.to;\n\t\t\t});\n\n\t\treturn {\n\t\t\tto () {\n\t\t\t\treturn copyDirOrFileTo\n\t\t\t\t\t.then(fn => {\n\t\t\t\t\t\treturn fn.apply(null, arguments);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\treturn symlink.apply( null, arguments );\n}\n\nexport function symlinkOrCopySync () {\n\tif ( isWindows ) {\n\t\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\t\treturn ( statSync( src ).isDirectory() ? copydirSync : copyFileSync ).apply( null, arguments );\n\t}\n\n\treturn symlinkSync.apply( null, arguments );\n}","import * as fs from 'graceful-fs';\nimport * as es6Promise from 'es6-promise';\nimport { syncMethod, asyncMethod } from './methodMakers/standardMethod';\nimport { asyncFileDescriptorMethod } from './methodMakers/fileDescriptorMethod';\n\n// standard async methods\nexport const chmod = asyncMethod( 'chmod' );\nexport const chown = asyncMethod( 'chown' );\nexport const createReadStream = asyncMethod( 'createReadStream' );\nexport const createWriteStream = asyncMethod( 'createWriteStream' );\nexport const lchmod = asyncMethod( 'lchmod' );\nexport const lchown = asyncMethod( 'lchown' );\nexport const lstat = asyncMethod( 'lstat' );\nexport const readdir = asyncMethod( 'readdir' );\nexport const readFile = asyncMethod( 'readFile' );\nexport const readlink = asyncMethod( 'readlink' );\nexport const realpath = asyncMethod( 'realpath' );\nexport const rmdir = asyncMethod( 'rmdir' );\nexport const stat = asyncMethod( 'stat' );\nexport const truncate = asyncMethod( 'truncate' );\nexport const unlink = asyncMethod( 'unlink' );\nexport const utimes = asyncMethod( 'utimes' );\nexport const unwatchFile = asyncMethod( 'unwatchFile' );\nexport const watch = asyncMethod( 'watch' );\nexport const watchFile = asyncMethod( 'watchFile' );\n\n// standard sync methods\nexport const chmodSync = syncMethod( 'chmodSync' );\nexport const chownSync = syncMethod( 'chownSync' );\nexport const lchmodSync = syncMethod( 'lchmodSync' );\nexport const lchownSync = syncMethod( 'lchownSync' );\nexport const lstatSync = syncMethod( 'lstatSync' );\nexport const readdirSync = syncMethod( 'readdirSync' );\nexport const readFileSync = syncMethod( 'readFileSync' );\nexport const readlinkSync = syncMethod( 'readlinkSync' );\nexport const realpathSync = syncMethod( 'realpathSync' );\nexport const rmdirSync = syncMethod( 'rmdirSync' );\nexport const statSync = syncMethod( 'statSync' );\nexport const truncateSync = syncMethod( 'truncateSync' );\nexport const unlinkSync = syncMethod( 'unlinkSync' );\nexport const utimesSync = syncMethod( 'utimesSync' );\n\n// file descriptor async methods\nexport const close = asyncFileDescriptorMethod( 'close' );\nexport const fchmod = asyncFileDescriptorMethod( 'fchmod' );\nexport const fchown = asyncFileDescriptorMethod( 'fchown' );\nexport const fstat = asyncFileDescriptorMethod( 'fstat' );\nexport const fsync = asyncFileDescriptorMethod( 'fsync' );\nexport const ftruncate = asyncFileDescriptorMethod( 'ftruncate' );\nexport const futimes = asyncFileDescriptorMethod( 'futimes' );\nexport const read = asyncFileDescriptorMethod( 'read' );\n\n// file descriptor sync methods\nexport const closeSync = fs.closeSync;\nexport const fchmodSync = fs.fchmodSync;\nexport const fchownSync = fs.fchownSync;\nexport const fstatSync = fs.fstatSync;\nexport const fsyncSync = fs.fsyncSync;\nexport const ftruncateSync = fs.ftruncateSync;\nexport const futimesSync = fs.futimesSync;\nexport const readSync = fs.readSync;\n\n// special methods\nexport { createReadStream, createWriteStream } from './specialMethods/createReadStream-createWriteStream'; // TODO aren't these covered by the standard methods?\nexport { exists, existsSync } from './specialMethods/exists';\nexport { link, linkSync, rename, renameSync } from './specialMethods/link-rename';\nexport { mkdir, mkdirSync } from './specialMethods/mkdir';\nexport { open, openSync } from './specialMethods/open';\nexport { symlink, symlinkSync } from './specialMethods/symlink';\nexport { writeFile, writeFileSync, appendFile, appendFileSync } from './specialMethods/writeFile-appendFile';\n\n// extra methods\nexport { copydir, copydirSync } from './extraMethods/copydir';\nexport { copyFile, copyFileSync } from './extraMethods/copyFile';\nexport { lsr, lsrSync } from './extraMethods/lsr';\nexport { rimraf, rimrafSync } from './extraMethods/rimraf';\nexport { symlinkOrCopy, symlinkOrCopySync } from './extraMethods/symlinkOrCopy';\n\n// expose Promise for convenience\n// https://github.com/esperantojs/esperanto/issues/161\nexport const Promise = es6Promise.Promise;"],"names":["resolve","const","let","arguments","createReadStream","createWriteStream","dirname","asyncMethod","syncMethod","normaliseArguments","sep","fs","Promise"],"mappings":"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"}