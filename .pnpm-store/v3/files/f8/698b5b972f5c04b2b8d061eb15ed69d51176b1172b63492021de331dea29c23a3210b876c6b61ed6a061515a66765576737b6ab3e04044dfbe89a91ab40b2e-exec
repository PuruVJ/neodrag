import E from"path";import{fileURLToPath as g,pathToFileURL as R}from"url";import{installSourceMapSupport as F,compareNodeVersion as y,resolveTsPath as U,transform as P,transformDynamicImport as T}from"@esbuild-kit/core-utils";import{parseTsconfig as D,getTsconfig as I,createPathsMatcher as W}from"get-tsconfig";import k from"fs";const p=new Map;async function A(t){if(p.has(t))return p.get(t);if(!await k.promises.access(t).then(()=>!0,()=>!1)){p.set(t,void 0);return}const r=await k.promises.readFile(t,"utf8");try{const o=JSON.parse(r);return p.set(t,o),o}catch{throw new Error(`Error parsing: ${t}`)}}async function J(t){let s=new URL("package.json",t);for(;!s.pathname.endsWith("/node_modules/package.json");){const r=g(s),o=await A(r);if(o)return o;const e=s;if(s=new URL("../package.json",s),s.pathname===e.pathname)break}}async function L(t){var s;const r=await J(t);return(s=r==null?void 0:r.type)!=null?s:"commonjs"}const f=F(),h=process.env.ESBK_TSCONFIG_PATH?{path:process.env.ESBK_TSCONFIG_PATH,config:D(process.env.ESBK_TSCONFIG_PATH)}:I(),N=h==null?void 0:h.config,S=h&&W(h),_="file://",d=/\.([cm]?ts|[tj]sx)$/,M=t=>{const s=E.extname(t);if(s===".json")return"json";if(s===".mjs"||s===".mts")return"module";if(s===".cjs"||s===".cts")return"commonjs"},l=t=>{const s=M(t);if(s)return s;if(d.test(t))return L(t)},v=[".js",".json",".ts",".tsx",".jsx"];async function w(t,s,r){let o;for(const e of v)try{return await u(t+e,s,r,!0)}catch(n){if(o===void 0){const{message:a}=n;n.message=n.message.replace(`${e}'`,"'"),n.stack=n.stack.replace(a,n.message),o=n}}throw o}async function O(t,s,r){const o=t.endsWith("/"),e=o?"index":"/index";try{return await w(t+e,s,r)}catch(n){if(!o)try{return await w(t,s,r)}catch{}const{message:a}=n;throw n.message=n.message.replace(`${e.replace("/",E.sep)}'`,"'"),n.stack=n.stack.replace(a,n.message),n}}const C=/^\.{0,2}\//,K=y([14,13,1])>=0||y([12,20,0])>=0,u=async function(t,s,r,o){var e;if(!K&&t.startsWith("node:")&&(t=t.slice(5)),t.endsWith("/"))return await O(t,s,r);const n=t.startsWith(_)||C.test(t);if(S&&!n&&!((e=s.parentURL)!=null&&e.includes("/node_modules/"))){const c=S(t);for(const i of c)try{return await u(R(i).toString(),s,r)}catch{}}if(d.test(s.parentURL)){const c=U(t);if(c)try{return await u(c,s,r,!0)}catch(i){const{code:m}=i;if(m!=="ERR_MODULE_NOT_FOUND"&&m!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw i}}let a;try{a=await r(t,s,r)}catch(c){if(c instanceof Error&&!o){const{code:i}=c;if(i==="ERR_UNSUPPORTED_DIR_IMPORT")try{return await O(t,s,r)}catch(m){if(m.code!=="ERR_PACKAGE_IMPORT_NOT_DEFINED")throw m}if(i==="ERR_MODULE_NOT_FOUND")try{return await w(t,s,r)}catch{}}throw c}return!a.format&&a.url.startsWith(_)&&(a.format=await l(a.url)),a},x=async function(t,s,r){process.send&&process.send({type:"dependency",path:t}),t.endsWith(".json")&&(s.importAssertions||(s.importAssertions={}),s.importAssertions.type="json");const o=await r(t,s,r);if(!o.source)return o;const e=t.startsWith("file://")?g(t):t,n=o.source.toString();if(o.format==="json"||d.test(t)){const a=await P(n,e,{tsconfigRaw:N});return{format:"module",source:f(a,t)}}if(o.format==="module"){const a=T(e,n);a&&(o.source=f(a,t))}return o},b=async function(t,s,r){if(t.endsWith(".json"))return{format:"module"};try{return await r(t,s,r)}catch(o){if(o.code==="ERR_UNKNOWN_FILE_EXTENSION"&&t.startsWith(_)){const e=await l(t);if(e)return{format:e}}throw o}},G=async function(t,s,r){const{url:o}=s,e=o.startsWith("file://")?g(o):o;if(process.send&&process.send({type:"dependency",path:o}),o.endsWith(".json")||d.test(o)){const a=await P(t.toString(),e,{tsconfigRaw:N});return{source:f(a,o)}}const n=await r(t,s,r);if(s.format==="module"){const a=T(e,n.source.toString());a&&(n.source=f(a,o))}return n},j=y([16,12,0])<0,H=j?b:void 0,$=j?G:void 0;export{H as getFormat,x as load,u as resolve,$ as transformSource};
