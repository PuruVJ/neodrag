---
import type { Framework } from '$helpers/constants';
import { getCollection } from 'astro:content';

type Props = {
	framework: Framework;
};

const { framework } = Astro.props;

const pathname = Astro.url.pathname;

const framework_collection = (await getCollection('framework')).sort((a, b) =>
	a.id > b.id ? 1 : -1
);
const migrations_collection = (await getCollection('migration')).sort((a, b) =>
	a.id > b.id ? 1 : -1
);
const plugin_collection = (await getCollection('plugin')).sort((a, b) => (a.id > b.id ? 1 : -1));

const aria_current_val = (path: string) => (pathname.endsWith(path) ? 'page' : 'false');

const nav_list = [
	{
		title: 'framework',
		sections: framework_collection.map((v) => ({
			slug: `/docs/${v.id.replace(/\d{2}-(.+)\/page/, '$1')}`,
			title: v.data.nav_title ?? v.data.title,
		})),
	},
	{
		title: 'plugin',
		sections: plugin_collection.map((v) => ({
			slug: `/docs/${framework}/plugin/${v.id.replace(/\d{2}-(.+)\/page/, '$1')}`,
			title: v.data.nav_title ?? v.data.title,
		})),
	},
	{
		title: 'migration',
		sections: migrations_collection.map((v) => ({
			slug: `/docs/${framework}/migration/${v.id.replace(/\d{2}-(.+)\/page/, '$1')}`,
			title: v.data.nav_title ?? v.data.title,
		})),
	},
] satisfies {
	title: string;
	sections: {
		title: string;
		slug: string;
	}[];
}[];
---

<!-- Component should be wrapped in an <aside> or <header> -->
<div class="nav container">
	<a href="/" class="h3 logo unstyled">
		<img src="/logo.svg" alt="Neodrag icon, a pink squircle with a paw in it" />
		<span class="h3">Neodrag</span>
	</a>

	<nav>
		{
			nav_list.map(({ title, sections }, index, arr) => (
				<>
					<ul class="group">
						<div class="title">{title}</div>

						{sections.map(({ slug, title }) => (
							<li>
								<a href={slug} aria-current={aria_current_val(slug)} class="unstyled">
									{title}
								</a>
							</li>
						))}
					</ul>

					{index !== arr.length - 1 && <hr />}
				</>
			))
		}
	</nav>

	<span class="spacer"></span>
</div>

<style>
	select {
		background-color: var(--app-color-scrolling-navbar);
		width: 95%;
		margin: 0 auto;
		padding-right: 1rem;
		border: none;
	}
	.container {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		height: 100%;
		overflow-y: auto;
		overflow-x: hidden;
		scrollbar-width: 1rem;
	}

	.logo {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		text-decoration: none;
		font-weight: 600;
		margin: 0.25rem 1rem;

		@media (min-width: 968px) {
			margin: 1rem;
		}

		.h3 {
			margin: 0;
		}

		img {
			width: clamp(2rem, 5vw, 3rem);
		}
	}

	nav {
		flex: 1 1 auto;
		padding: 0.5rem;
	}

	ul {
		list-style: none;
		padding: 0;
		margin: 0;
	}

	li {
		padding: 0.25rem 0;
	}

	nav a {
		&,
		&:visited {
			display: block;
			padding: 0.25rem 0.75rem;
			text-decoration: none;
			color: color-mix(in lch, var(--app-color-light), var(--app-color-anti-mixer) 90%);
			font-family: var(--app-font-mono);
			font-size: 1rem;
			border-radius: 4px;
			transition: background-color 0.05s ease-in;
			margin: 0;
		}

		&:hover {
			background-color: color-mix(in lch, var(--secondary-color), transparent 90%);
		}
	}

	hr {
		margin: 1rem 0;
		border: none;
		height: 1px;
		box-shadow: inset 0 0 0 2px
			color-mix(in lch, var(--secondary-color), var(--app-color-mixer) 50%);
	}

	.spacer {
		flex: 1 1 auto;
	}

	.group .title {
		font-size: 0.75rem;
		font-weight: 600;
		text-transform: uppercase;
		letter-spacing: 0.05em;
		color: var(--app-color-light-contrast);
		margin-bottom: 1ch;
	}

	.group a {
		&[aria-current='page'] {
			background-color: color-mix(in lch, var(--secondary-color), transparent 80%);
		}
	}

	.theme-switcher {
		display: flex;
		justify-content: center;
		gap: 1rem;
		font-size: 1.5rem;
		width: 100%;
	}
</style>
