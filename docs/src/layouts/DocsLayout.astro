---
import Nav from '$components/docs/Nav.astro';
import MetaThemeColor from '$components/MetaThemeColor.svelte';
import MobileNav from '$components/MobileNav.svelte';
import ToC from '$components/ToC.astro';
import type { MarkdownHeading } from 'astro';
import Layout from './Layout.astro';
import type { Framework } from '$helpers/constants';

type Props = {
	title: string;
	headings: MarkdownHeading[];
	framework: Framework;
};

const { title, headings, framework } = Astro.props;
---

<MetaThemeColor client:load />

<Layout title={title}>
	<div class="mobile-nav">
		<MobileNav client:media="(max-width: 968px)">
			<Nav framework={framework} />
		</MobileNav>
	</div>

	<section class="docs-container" id="docs-container">
		<aside>
			<Nav framework={framework} />
		</aside>

		<main>
			<article>
				<slot />
			</article>
		</main>

		<aside>
			<ToC headings={headings} />
		</aside>
	</section>
</Layout>

<style is:global>
	.mobile-nav {
		display: none;

		@media (max-width: 967px) {
			display: block;
		}
	}

	.docs-container {
		display: grid;
		grid-template-columns: 300px auto 300px;
		gap: 1rem;

		width: 100%;
		height: auto;

		@media (max-width: 967px) {
			grid-template-columns: 1fr;

			& aside {
				display: none;
			}
		}
	}

	aside {
		height: 100%;
	}

	main {
		/* Needed for the navigation bar intersection observer */
		position: relative;

		min-width: 0;
		height: 100vh;

		padding: 1rem;

		overflow-y: auto;
		overflow-x: hidden;
		scroll-behavior: smooth;

		@media (max-width: 768px) {
			padding: 4rem 1rem;
		}
	}

	h1 {
		margin: 0 !important;
	}

	.docs-container {
		p,
		pre.astro-code,
		blockquote {
			max-width: clamp(20ch, 100vw, var(--entity-width));

			@media (max-width: 967px) {
				max-width: 100%;
			}
		}

		.astro-code .line {
			display: inline-block;
			width: 100%;
		}

		.astro-code .line.highlighted {
			background-color: color-mix(in lch, var(--app-color-dark), transparent 40%) !important;
		}

		p,
		a {
			margin: 1.5rem 0;

			font-size: clamp(1.1rem, 2vw, 1.2rem);
			line-height: 1.618;
		}

		:global(code) {
			font-family: var(--app-font-mono);
			font-size: 0.9em;
			word-break: break-all;

			max-width: 100%;

			background-color: hsla(var(--app-color-dark-hsl), 0.1);
		}

		:global(pre.astro-code code) {
			background-color: transparent;
		}

		:global(h1, h2, h3, h4, h5) {
			--anchor-opacity: 1;

			display: flex;
			align-items: center;
			gap: 0.5rem;
		}

		:global(:where(h1, h2, h3, h4, h5):hover) {
			--anchor-opacity: 1;
		}

		:global(:where(.heading-anchor)) {
			opacity: var(--anchor-opacity);

			font-family: var(--app-font-mono);
			font-size: 0.7em;
			text-decoration: none;

			height: auto;
		}
	}

	/* Global styles below */

	body {
		--secondary-color: var(--app-color-primary);
		--app-color-scrolling-navbar: color-mix(
			in lch,
			var(--secondary-color),
			var(--app-color-mixer) 35%
		);

		background-image: radial-gradient(
			ellipse farthest-corner at 95% 2%,
			color-mix(in lch, var(--secondary-color), transparent 50%) 0%,
			var(--app-color-shell) 100%
		);

		overflow: hidden;

		&[data-framework='svelte'] {
			--secondary-color: var(--app-color-brand-svelte);
		}

		&[data-framework='vue'] {
			--secondary-color: var(--app-color-brand-vue);
		}

		&[data-framework='react'] {
			--secondary-color: var(--app-color-brand-react);
		}

		&[data-framework='solid'] {
			--secondary-color: var(--app-color-brand-solid);
		}

		&[data-framework='vanilla'] {
			--secondary-color: var(--app-color-brand-vanilla);
		}
	}

	pre.astro-code {
		--font-size: 1rem;
		border-radius: 0.6rem;
		overflow-x: auto;
		overflow-y: hidden;
		padding: 1rem;
		font-size: var(--font-size) !important;
		line-height: 1.5 !important;
		margin: 1.5rem 0;

		width: var(--entity-width);

		@media (max-width: 967px) {
			width: 100%;
		}

		& code {
			font-size: var(--font-size) !important;

			background-color: transparent;
		}
	}
</style>
