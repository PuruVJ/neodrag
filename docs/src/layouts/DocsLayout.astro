---
import type { MarkdownLayoutProps } from 'astro';

import Nav from '$components/docs/Nav.svelte';
import InstallationMDX from '../content/installation.mdx';
import Layout from './Layout.astro';
import MobileNav from '$components/MobileNav.svelte';

import sizes from '../data/sizes.json';

type Props = MarkdownLayoutProps<{
	title: string;
	tagline: string;
}>;

const { frontmatter } = Astro.props;
const { tagline, title, url } = frontmatter;

const framework = url?.split('/').at(-1) as keyof typeof sizes;
const size = sizes[framework];
---

<Layout title={title}>
	<div class="mobile-nav">
		<MobileNav client:load />
	</div>

	<section class="docs-container" id="docs-container">
		<aside>
			<Nav client:load />
		</aside>

		<main>
			<article>
				<h1>
					@neodrag/<span style={`color: var(--app-color-brand-${framework})`}
						>{framework}</span
					>
				</h1>
				<p>{tagline}</p>

				<!-- TODO: Replace this with a component that opens a mini dialog on click to show what it does. -->
				<button class="tag">
					{size}KB min+br
				</button>

				<InstallationMDX framework={framework} />

				<slot />

				<h2>Credits</h2>
				<p>
					Inspired from the amazing
					<a href="https://github.com/react-grid-layout/react-draggable">
						react-draggable
					</a>
					library, and implements the same API.
				</p>
			</article>
		</main>
	</section>
</Layout>

<style lang="scss">
	@import '../css/breakpoints';

	.mobile-nav {
		display: none;

		@include media('<tablet') {
			display: block;
		}
	}

	.docs-container {
		display: grid;
		grid-template-columns: 300px auto;
		gap: 1rem;

		width: 100%;
		height: auto;

		@include media('<tablet') {
			grid-template-columns: 1fr;

			aside {
				display: none;
			}
		}
	}

	aside {
		height: 100%;
	}

	main {
		// Needed for the navigation bar intersection observer
		position: relative;

		min-width: 0;
		height: 100vh;

		padding: 0 1rem;

		overflow-y: auto;
		scroll-behavior: smooth;

		@include media('<=sm-tablet') {
			padding: 4rem 1rem;
		}
	}

	h1 {
		margin: 0 !important;
	}

	.docs-container {
		:global(p, pre.astro-code, blockquote) {
			max-width: clamp(20ch, 100vw, var(--entity-width));

			@include media('<tablet') {
				max-width: 100%;
			}
		}

		:global(p, a) {
			margin: 1.5rem 0;

			font-size: clamp(1.1rem, 2vw, 1.2rem);
			line-height: 1.618;
		}

		:global(code) {
			font-family: var(--app-font-mono);
			font-size: 0.9em;
		}

		:global(h1, h2, h3, h4, h5) {
			--anchor-opacity: 1;

			display: flex;
			align-items: center;
			gap: 0.5rem;
		}

		:global(:where(h1, h2, h3, h4, h5):hover) {
			--anchor-opacity: 1;
		}

		:global(:where(.heading-anchor)) {
			opacity: var(--anchor-opacity);

			font-family: var(--app-font-mono);
			font-size: 0.7em;
			text-decoration: none;

			height: auto;
		}
	}
</style>

<style lang="scss" is:global>
	@import '../css/breakpoints';

	:root {
		--entity-width: clamp(400px, 60vw, 800px);
	}

	body {
		overflow: hidden;
	}

	pre.astro-code {
		--font-size: 1rem;
		border-radius: 0.6rem;
		overflow-x: auto;
		overflow-y: hidden;
		padding: 1rem;
		font-size: var(--font-size) !important;
		line-height: 1.5 !important;
		margin: 1.5rem 0;

		width: var(--entity-width);

		@include media('<tablet') {
			width: 100%;
		}
	}
</style>
